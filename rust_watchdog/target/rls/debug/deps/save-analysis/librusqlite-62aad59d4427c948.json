{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0","program":"C:\\Users\\Jay\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rusqlite","--edition=2018","C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=62aad59d4427c948","-C","extra-filename=-62aad59d4427c948","--out-dir","c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps","--extern","bitflags=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\libbitflags-1fba0a84d38b7ac1.rmeta","--extern","fallible_iterator=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\libfallible_iterator-07791104af7e6ab9.rmeta","--extern","fallible_streaming_iterator=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\libfallible_streaming_iterator-623c4a3bcf90f795.rmeta","--extern","hashlink=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\libhashlink-6b3968f4af9a852a.rmeta","--extern","libsqlite3_sys=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\liblibsqlite3_sys-b8d4686f287365ac.rmeta","--extern","memchr=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\libmemchr-1a5516562fa3a030.rmeta","--extern","smallvec=c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\libsmallvec-a0d4b4f8ed9b3ee3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jay\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jay\\Desktop\\Code\\RustProjects\\rust_watchdog\\target\\rls\\debug\\deps\\librusqlite-62aad59d4427c948.rmeta"},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[5830991107544967759,0]},"crate_root":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src","external_crates":[{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2135196546772561304,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[10100063161427464349,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[18166920060419810902,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8277429635966420526,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[1216845600797868778,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4668287356885333314,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8817118394831127109,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8504866355990175305,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13162136604145443950,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12752153024841339346,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14912306932249625247,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13614144605518827024,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12294374008152043540,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":14,"id":{"name":"libsqlite3_sys","disambiguator":[16833572936820094992,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":15,"id":{"name":"hashlink","disambiguator":[13170763429165467380,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":16,"id":{"name":"hashbrown","disambiguator":[4235583990633743572,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":17,"id":{"name":"ahash","disambiguator":[16927858071591269989,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":18,"id":{"name":"once_cell","disambiguator":[4055551737534760079,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":19,"id":{"name":"getrandom","disambiguator":[12269644180863608194,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","num":20,"id":{"name":"cfg_if","disambiguator":[16326245882822986692,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","num":21,"id":{"name":"fallible_iterator","disambiguator":[4495101410596026013,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","num":22,"id":{"name":"fallible_streaming_iterator","disambiguator":[18354826472250058770,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","num":23,"id":{"name":"smallvec","disambiguator":[6968232822539704159,0]}},{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","num":24,"id":{"name":"bitflags","disambiguator":[16159448483098271261,0]}}],"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":0,"byte_end":67082,"line_start":1,"line_end":2016,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1467,"byte_end":1481,"line_start":53,"line_end":53,"column_start":9,"column_end":23},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1960,"byte_end":1975,"line_start":73,"line_end":73,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2000,"byte_end":2006,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"Column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2030,"byte_end":2035,"line_start":75,"line_end":75,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":93},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2057,"byte_end":2066,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2184,"byte_end":2200,"line_start":79,"line_end":79,"column_start":25,"column_end":41},"alias_span":null,"name":"params_from_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2202,"byte_end":2208,"line_start":79,"line_end":79,"column_start":43,"column_end":49},"alias_span":null,"name":"Params","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2210,"byte_end":2224,"line_start":79,"line_end":79,"column_start":51,"column_end":65},"alias_span":null,"name":"ParamsFromIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2248,"byte_end":2259,"line_start":80,"line_end":80,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2261,"byte_end":2264,"line_start":80,"line_end":80,"column_start":35,"column_end":38},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2266,"byte_end":2276,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2278,"byte_end":2281,"line_start":80,"line_end":80,"column_start":52,"column_end":55},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2283,"byte_end":2291,"line_start":80,"line_end":80,"column_start":57,"column_end":65},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2293,"byte_end":2297,"line_start":80,"line_end":80,"column_start":67,"column_end":71},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2327,"byte_end":2336,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2338,"byte_end":2353,"line_start":81,"line_end":81,"column_start":39,"column_end":54},"alias_span":null,"name":"StatementStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2385,"byte_end":2397,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2399,"byte_end":2408,"line_start":82,"line_end":82,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2410,"byte_end":2421,"line_start":82,"line_end":82,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2423,"byte_end":2442,"line_start":82,"line_end":82,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2467,"byte_end":2472,"line_start":83,"line_end":83,"column_start":23,"column_end":28},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2498,"byte_end":2499,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251602,"byte_end":251609,"line_start":72,"line_end":72,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":964}},{"kind":"Use","ref_id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251611,"byte_end":251623,"line_start":72,"line_end":72,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":964}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251625,"byte_end":251638,"line_start":72,"line_end":72,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":964}},{"kind":"Use","ref_id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251664,"byte_end":251669,"line_start":73,"line_end":73,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":964}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251671,"byte_end":251682,"line_start":73,"line_end":73,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":964}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251706,"byte_end":251711,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":964}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251738,"byte_end":251746,"line_start":75,"line_end":75,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":964}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":0,"byte_end":67082,"line_start":1,"line_end":2016,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":184},{"krate":0,"index":229},{"krate":0,"index":292},{"krate":0,"index":316},{"krate":0,"index":361},{"krate":0,"index":459},{"krate":0,"index":496},{"krate":0,"index":569},{"krate":0,"index":615},{"krate":0,"index":745},{"krate":0,"index":894},{"krate":0,"index":964},{"krate":0,"index":1193},{"krate":0,"index":1202},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":2604},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1337},{"krate":0,"index":2621},{"krate":0,"index":2627},{"krate":0,"index":1339},{"krate":0,"index":1344},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2645},{"krate":0,"index":2647},{"krate":0,"index":2650},{"krate":0,"index":2665},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2671},{"krate":0,"index":2673},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2712},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":2722},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2730},{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1357}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"/ Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":80,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":179,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{params, Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":191,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":239,"byte_end":242,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":243,"byte_end":263,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"/ struct Person {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":264,"byte_end":283,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/     id: i32,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":284,"byte_end":300,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":301,"byte_end":322,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/     data: Option<Vec<u8>>,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":323,"byte_end":353,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":354,"byte_end":359,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":360,"byte_end":363,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":364,"byte_end":393,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":394,"byte_end":443,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":444,"byte_end":447,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/     conn.execute(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":448,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/         \"CREATE TABLE person (","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":470,"byte_end":504,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/                   id              INTEGER PRIMARY KEY,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":505,"byte_end":563,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/                   name            TEXT NOT NULL,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":564,"byte_end":616,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/                   data            BLOB","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":617,"byte_end":659,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/                   )\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":660,"byte_end":685,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/         [],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":686,"byte_end":701,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     )?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":702,"byte_end":713,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/     let me = Person {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":714,"byte_end":739,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/         id: 0,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":740,"byte_end":758,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/         name: \"Steven\".to_string(),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":759,"byte_end":798,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/         data: None,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":799,"byte_end":822,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/     };","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":823,"byte_end":833,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     conn.execute(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":834,"byte_end":855,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/         \"INSERT INTO person (name, data) VALUES (?1, ?2)\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":856,"byte_end":918,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/         params![me.name, me.data],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":919,"byte_end":957,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     )?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":958,"byte_end":969,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":970,"byte_end":973,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT id, name, data FROM person\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":974,"byte_end":1048,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/     let person_iter = stmt.query_map([], |row| {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1049,"byte_end":1101,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/         Ok(Person {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1102,"byte_end":1125,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/             id: row.get(0)?,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1126,"byte_end":1158,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/             name: row.get(1)?,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1159,"byte_end":1193,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/             data: row.get(2)?,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1194,"byte_end":1228,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1229,"byte_end":1243,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/     })?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1244,"byte_end":1256,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1257,"byte_end":1260,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     for person in person_iter {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1261,"byte_end":1296,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/         println!(\"Found person {:?}\", person.unwrap());","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1297,"byte_end":1356,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1357,"byte_end":1366,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1367,"byte_end":1381,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1382,"byte_end":1387,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1388,"byte_end":1395,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":1396,"byte_end":1418,"line_start":50,"line_end":50,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67468,"byte_end":67481,"line_start":16,"line_end":16,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[{"value":"/ An error from an underlying SQLite call.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67419,"byte_end":67463,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67646,"byte_end":67670,"line_start":20,"line_end":20,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[{"value":"/ Error reported when attempting to open a connection when SQLite was","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67516,"byte_end":67587,"line_start":18,"line_end":18,"column_start":5,"column_end":76}},{"value":"/ configured to allow single-threaded use only.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67592,"byte_end":67641,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67806,"byte_end":67830,"line_start":24,"line_end":24,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but it cannot","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67677,"byte_end":67752,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ be converted to the requested Rust type.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67757,"byte_end":67801,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68166,"byte_end":68189,"line_start":30,"line_end":30,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[{"value":"/ Error when SQLite gives us an integral value outside the range of the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67897,"byte_end":67970,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/ requested type (e.g., trying to get the value 1000 into a `u8`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67975,"byte_end":68043,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ The associated `usize` is the column index,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68048,"byte_end":68095,"line_start":28,"line_end":28,"column_start":5,"column_end":52}},{"value":"/ and the associated `i64` is the value returned by SQLite.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68100,"byte_end":68161,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68252,"byte_end":68261,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[{"value":"/ Error converting a string to UTF-8.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68208,"byte_end":68247,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68389,"byte_end":68397,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[{"value":"/ Error converting a string to a C-compatible string because it contained","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68284,"byte_end":68359,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ an embedded nul.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68364,"byte_end":68384,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68533,"byte_end":68553,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[{"value":"/ Error when using SQL named parameters and passing a parameter name not","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68426,"byte_end":68500,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/ present in the SQL.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68505,"byte_end":68528,"line_start":40,"line_end":40,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68618,"byte_end":68629,"line_start":44,"line_end":44,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[{"value":"/ Error converting a file path to a string.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68568,"byte_end":68613,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68743,"byte_end":68765,"line_start":48,"line_end":48,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error returned when an [`execute`](crate::Connection::execute) call\n returns rows.\n","sig":null,"attributes":[{"value":"/ Error returned when an [`execute`](crate::Connection::execute) call","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68645,"byte_end":68716,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ returns rows.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68721,"byte_end":68738,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68928,"byte_end":68947,"line_start":52,"line_end":52,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for [`query_row`](crate::Connection::query_row)) did not return any.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to return at least one row (e.g.,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68772,"byte_end":68846,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ for [`query_row`](crate::Connection::query_row)) did not return any.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68851,"byte_end":68923,"line_start":51,"line_end":51,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69077,"byte_end":69095,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the index","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":68954,"byte_end":69029,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ is out of range for the statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69034,"byte_end":69072,"line_start":55,"line_end":55,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69228,"byte_end":69245,"line_start":60,"line_end":60,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a named column is requested, but no column","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69109,"byte_end":69179,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ matches the name for the statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69184,"byte_end":69223,"line_start":59,"line_end":59,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69432,"byte_end":69449,"line_start":65,"line_end":65,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, String, Type)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the type","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69260,"byte_end":69334,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ of the result in that column cannot be converted to the requested","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69339,"byte_end":69408,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ Rust type.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69413,"byte_end":69427,"line_start":64,"line_end":64,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69583,"byte_end":69603,"line_start":69,"line_end":69,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to insert one row did not insert","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69477,"byte_end":69550,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ any or insert many.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":69555,"byte_end":69578,"line_start":68,"line_end":68,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70649,"byte_end":70671,"line_start":92,"line_end":92,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error available for the implementors of the\n [`ToSql`](crate::types::ToSql) trait.\n","sig":null,"attributes":[{"value":"/ Error available for the implementors of the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70551,"byte_end":70598,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"/ [`ToSql`](crate::types::ToSql) trait.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70603,"byte_end":70644,"line_start":91,"line_end":91,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1407},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70789,"byte_end":70801,"line_start":95,"line_end":95,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[{"value":"/ Error when the SQL is not a `SELECT`, is not read-only.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":70725,"byte_end":70784,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71674,"byte_end":71691,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"name":"MultipleStatement","qualname":"::error::Error::MultipleStatement","value":"Error::MultipleStatement","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the SQL contains multiple statements.\n","sig":null,"attributes":[{"value":"/ Error when the SQL contains multiple statements.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71617,"byte_end":71669,"line_start":117,"line_end":117,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71905,"byte_end":71926,"line_start":122,"line_end":122,"column_start":5,"column_end":26},"name":"InvalidParameterCount","qualname":"::error::Error::InvalidParameterCount","value":"Error::InvalidParameterCount(usize, usize)","parent":{"krate":0,"index":1358},"children":[],"decl_id":null,"docs":" Error when the number of bound parameters does not match the number of\n parameters in the query. The first `usize` is how many parameters were\n given, the 2nd is how many were expected.\n","sig":null,"attributes":[{"value":"/ Error when the number of bound parameters does not match the number of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71697,"byte_end":71771,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ parameters in the query. The first `usize` is how many parameters were","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71776,"byte_end":71850,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ given, the 2nd is how many were expected.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":71855,"byte_end":71900,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67407,"byte_end":67412,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    SqliteFailure(ffi::Error, Option<String>),\n    SqliteSingleThreadedMode,\n    FromSqlConversionFailure(usize, Type,\n                             Box<dyn error::Error + Send + Sync + 'static>),\n    IntegralValueOutOfRange(usize, i64),\n    Utf8Error(str::Utf8Error),\n    NulError(::std::ffi::NulError),\n    InvalidParameterName(String),\n    InvalidPath(PathBuf),\n    ExecuteReturnedResults,\n    QueryReturnedNoRows,\n    InvalidColumnIndex(usize),\n    InvalidColumnName(String),\n    InvalidColumnType(usize, String, Type),\n    StatementChangedRows(usize),\n    ToSqlConversionFailure(Box<dyn error::Error + Send + Sync + 'static>),\n    InvalidQuery,\n    MultipleStatement,\n    InvalidParameterCount(usize, usize),\n}","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1370},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1411}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from rusqlite.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67278,"byte_end":67325,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"allow(clippy :: enum_variant_names)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67343,"byte_end":67379,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":67380,"byte_end":67397,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82698,"byte_end":82710,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"pub fn busy_timeout(&Self, Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[{"value":"/ Set a busy handler that sleeps for a specified amount of time when a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":81949,"byte_end":82021,"line_start":13,"line_end":13,"column_start":5,"column_end":77}},{"value":"/ table is locked. The handler will sleep multiple times until at","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82026,"byte_end":82093,"line_start":14,"line_end":14,"column_start":5,"column_end":72}},{"value":"/ least \"ms\" milliseconds of sleeping have accumulated.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82098,"byte_end":82155,"line_start":15,"line_end":15,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82160,"byte_end":82163,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Calling this routine with an argument equal to zero turns off all busy","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82168,"byte_end":82242,"line_start":17,"line_end":17,"column_start":5,"column_end":79}},{"value":"/ handlers.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82247,"byte_end":82260,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82265,"byte_end":82268,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler for a particular database","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82273,"byte_end":82342,"line_start":20,"line_end":20,"column_start":5,"column_end":74}},{"value":"/ connection at any given moment. If another busy handler was defined","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82347,"byte_end":82418,"line_start":21,"line_end":21,"column_start":5,"column_end":76}},{"value":"/ (using [`busy_handler`](Connection::busy_handler)) prior to calling this","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82423,"byte_end":82499,"line_start":22,"line_end":22,"column_start":5,"column_end":81}},{"value":"/ routine, that other busy handler is cleared.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82504,"byte_end":82552,"line_start":23,"line_end":23,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82557,"byte_end":82560,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Newly created connections currently have a default busy timeout of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82565,"byte_end":82635,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/ 5000ms, but this may be subject to change.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":82640,"byte_end":82686,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84244,"byte_end":84256,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"pub fn busy_handler(&Self, Option<fn(: i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[{"value":"/ Register a callback to handle `SQLITE_BUSY` errors.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83044,"byte_end":83099,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83104,"byte_end":83107,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ If the busy callback is `None`, then `SQLITE_BUSY` is returned","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83112,"byte_end":83178,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ immediately upon encountering the lock. The argument to the busy","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83183,"byte_end":83251,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/ handler callback is the number of times that the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83256,"byte_end":83308,"line_start":41,"line_end":41,"column_start":5,"column_end":57}},{"value":"/ busy handler has been invoked previously for the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83313,"byte_end":83365,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/ same locking event. If the busy callback returns `false`, then no","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83370,"byte_end":83439,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ additional attempts are made to access the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83444,"byte_end":83490,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/ database and `SQLITE_BUSY` is returned to the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83495,"byte_end":83544,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/ application. If the callback returns `true`, then another attempt","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83549,"byte_end":83618,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ is made to access the database and the cycle repeats.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83623,"byte_end":83680,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83685,"byte_end":83688,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler defined for each database","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83693,"byte_end":83762,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ connection. Setting a new busy handler clears any previously set","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83767,"byte_end":83835,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/ handler. Note that calling [`busy_timeout()`](Connection::busy_timeout)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83840,"byte_end":83915,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ or evaluating `PRAGMA busy_timeout=N` will change the busy handler","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83920,"byte_end":83990,"line_start":52,"line_end":52,"column_start":5,"column_end":75}},{"value":"/ and thus clear any previously set busy handler.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":83995,"byte_end":84046,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84051,"byte_end":84054,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Newly created connections default to a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84059,"byte_end":84101,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ [`busy_timeout()`](Connection::busy_timeout) handler with a timeout","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84106,"byte_end":84177,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ of 5000ms, although this is subject to change.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84182,"byte_end":84232,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89634,"byte_end":89648,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"pub fn prepare_cached(&Self, &str) -> Result<CachedStatement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n [`prepare_cached`](Connection::prepare_cached) once it is dropped.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution, returning a previously prepared","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88505,"byte_end":88579,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (but not currently in-use) statement if one is available. The","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88584,"byte_end":88649,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/ returned statement will be cached for reuse by future calls to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88654,"byte_end":88720,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/ [`prepare_cached`](Connection::prepare_cached) once it is dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88725,"byte_end":88795,"line_start":14,"line_end":14,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88800,"byte_end":88803,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88808,"byte_end":88826,"line_start":16,"line_end":16,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88831,"byte_end":88872,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88877,"byte_end":88936,"line_start":18,"line_end":18,"column_start":5,"column_end":64}},{"value":"/     {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88941,"byte_end":88950,"line_start":19,"line_end":19,"column_start":5,"column_end":14}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88955,"byte_end":89043,"line_start":20,"line_end":20,"column_start":5,"column_end":93}},{"value":"/         stmt.execute([\"Joe Smith\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89048,"byte_end":89089,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89094,"byte_end":89103,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/     {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89108,"byte_end":89117,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"/         // This will return the same underlying SQLite statement handle without","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89122,"byte_end":89205,"line_start":24,"line_end":24,"column_start":5,"column_end":88}},{"value":"/         // having to prepare it again.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89210,"byte_end":89252,"line_start":25,"line_end":25,"column_start":5,"column_end":47}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89257,"byte_end":89345,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/         stmt.execute([\"Bob Jones\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89350,"byte_end":89391,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89396,"byte_end":89405,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89410,"byte_end":89424,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89429,"byte_end":89434,"line_start":30,"line_end":30,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89439,"byte_end":89446,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89451,"byte_end":89454,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89459,"byte_end":89472,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89477,"byte_end":89480,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89485,"byte_end":89560,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89565,"byte_end":89608,"line_start":36,"line_end":36,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89613,"byte_end":89622,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90089,"byte_end":90126,"line_start":48,"line_end":48,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"pub fn set_prepared_statement_cache_capacity(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of cached prepared statements this connection","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89745,"byte_end":89817,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ will hold. By default, a connection will hold a relatively small","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89822,"byte_end":89890,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ number of cached statements. If you need more, or know that you","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89895,"byte_end":89962,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ will not use cached statements, you","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":89967,"byte_end":90006,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ can set the capacity manually using this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90011,"byte_end":90063,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90068,"byte_end":90077,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90300,"byte_end":90330,"line_start":54,"line_end":54,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"pub fn flush_prepared_statement_cache(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[{"value":"/ Remove/finalize all prepared statements currently in the cache.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90207,"byte_end":90274,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90279,"byte_end":90288,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90847,"byte_end":90862,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[{"value":"/ Cacheable statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90639,"byte_end":90663,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90664,"byte_end":90667,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Statement will return automatically to the cache by default.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90668,"byte_end":90732,"line_start":68,"line_end":68,"column_start":1,"column_end":65}},{"value":"/ If you want the statement to be discarded, call","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90733,"byte_end":90784,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/ [`discard()`](CachedStatement::discard) on it.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90785,"byte_end":90835,"line_start":70,"line_end":70,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91917,"byte_end":91924,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement>::discard","value":"pub fn discard(Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n [`Connection`]'s collection of cached statements.\n","sig":null,"attributes":[{"value":"/ Discard the statement, preventing it from being returned to its","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91766,"byte_end":91833,"line_start":111,"line_end":111,"column_start":5,"column_end":72}},{"value":"/ [`Connection`]'s collection of cached statements.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91838,"byte_end":91891,"line_start":112,"line_end":112,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91896,"byte_end":91905,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98589,"byte_end":98595,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Column","qualname":"::column::Column","value":"Column {  }","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"decl_id":null,"docs":" Information about a column of a SQLite query.\n","sig":null,"attributes":[{"value":"/ Information about a column of a SQLite query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98511,"byte_end":98560,"line_start":5,"line_end":5,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98764,"byte_end":98768,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"name","qualname":"<Column>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the column.\n","sig":null,"attributes":[{"value":"/ Returns the name of the column.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98687,"byte_end":98722,"line_start":13,"line_end":13,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98727,"byte_end":98736,"line_start":14,"line_end":14,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98741,"byte_end":98752,"line_start":15,"line_end":15,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98916,"byte_end":98925,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"decl_type","qualname":"<Column>::decl_type","value":"pub fn decl_type(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the column (`None` for expression).\n","sig":null,"attributes":[{"value":"/ Returns the type of the column (`None` for expression).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98815,"byte_end":98874,"line_start":20,"line_end":20,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98879,"byte_end":98888,"line_start":21,"line_end":21,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98893,"byte_end":98904,"line_start":22,"line_end":22,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99280,"byte_end":99292,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement>::column_names","value":"pub fn column_names(&Self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.","sig":null,"attributes":[{"value":"/ Get all the column names in the result set of the prepared statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99008,"byte_end":99081,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99086,"byte_end":99089,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99094,"byte_end":99166,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99171,"byte_end":99239,"line_start":32,"line_end":32,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99244,"byte_end":99268,"line_start":33,"line_end":33,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99846,"byte_end":99858,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement>::column_count","value":"pub fn column_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.","sig":null,"attributes":[{"value":"/ Return the number of columns in the result set returned by the prepared","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99539,"byte_end":99614,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99619,"byte_end":99633,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99638,"byte_end":99641,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99646,"byte_end":99718,"line_start":47,"line_end":47,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99723,"byte_end":99791,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99796,"byte_end":99820,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":99825,"byte_end":99834,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101561,"byte_end":101572,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Statement>::column_name","value":"pub fn column_name(&Self, usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name assigned to a particular column in the result set\n returned by the prepared statement.","sig":null,"attributes":[{"value":"/ Returns the name assigned to a particular column in the result set","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101027,"byte_end":101097,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ returned by the prepared statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101102,"byte_end":101141,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101146,"byte_end":101149,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101154,"byte_end":101226,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101231,"byte_end":101299,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101304,"byte_end":101328,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101333,"byte_end":101336,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101341,"byte_end":101355,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101360,"byte_end":101363,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101368,"byte_end":101440,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101445,"byte_end":101475,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101480,"byte_end":101483,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Panics when column name is not valid UTF-8.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101488,"byte_end":101535,"line_start":93,"line_end":93,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101540,"byte_end":101549,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102433,"byte_end":102445,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement>::column_index","value":"pub fn column_index(&Self, &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[{"value":"/ Returns the column index in the result set for a given column name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101859,"byte_end":101930,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101935,"byte_end":101938,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If there is no AS clause then the name of the column is unspecified and","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":101943,"byte_end":102018,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ may change from one release of SQLite to the next.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102023,"byte_end":102077,"line_start":107,"line_end":107,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102082,"byte_end":102085,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If associated DB schema can be altered concurrently, you should make","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102090,"byte_end":102162,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ sure that current statement has already been stepped once before","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102167,"byte_end":102235,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ calling this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102240,"byte_end":102264,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102269,"byte_end":102272,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102277,"byte_end":102290,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102295,"byte_end":102298,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Will return an `Error::InvalidColumnName` when there is no column with","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102303,"byte_end":102377,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ the specified `name`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102382,"byte_end":102407,"line_start":116,"line_end":116,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":102412,"byte_end":102421,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":358}],"decl_id":null,"docs":" Configure database connections\n","sig":null,"attributes":[{"value":"/ Configure database connections","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":106937,"byte_end":106971,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107569,"byte_end":107596,"line_start":19,"line_end":19,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_FKEY","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Enable or disable the enforcement of foreign key constraints.\n","sig":null,"attributes":[{"value":"/ Enable or disable the enforcement of foreign key constraints.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107499,"byte_end":107564,"line_start":18,"line_end":18,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107645,"byte_end":107675,"line_start":21,"line_end":21,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_ENABLE_TRIGGER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Enable or disable triggers.\n","sig":null,"attributes":[{"value":"/ Enable or disable triggers.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107609,"byte_end":107640,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107813,"byte_end":107850,"line_start":24,"line_end":24,"column_start":5,"column_end":42},"name":"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Enable or disable the fts3_tokenizer() function which is part of the\n FTS3 full-text search engine extension.\n","sig":null,"attributes":[{"value":"/ Enable or disable the fts3_tokenizer() function which is part of the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107688,"byte_end":107760,"line_start":22,"line_end":22,"column_start":5,"column_end":77}},{"value":"/ FTS3 full-text search engine extension.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107765,"byte_end":107808,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108028,"byte_end":108060,"line_start":28,"line_end":28,"column_start":5,"column_end":37},"name":"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","value":"DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" In WAL mode, enable or disable the checkpoint operation before closing\n the connection.\n","sig":null,"attributes":[{"value":"/ In WAL mode, enable or disable the checkpoint operation before closing","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107925,"byte_end":107999,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ the connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108004,"byte_end":108023,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108162,"byte_end":108189,"line_start":30,"line_end":30,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_QPSG","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Activates or deactivates the query planner stability guarantee (QPSG).\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the query planner stability guarantee (QPSG).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108083,"byte_end":108157,"line_start":29,"line_end":29,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108353,"byte_end":108380,"line_start":33,"line_end":33,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_TRIGGER_EQP","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","value":"DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Includes or excludes output for any operations performed by trigger\n programs from the output of EXPLAIN QUERY PLAN commands.\n","sig":null,"attributes":[{"value":"/ Includes or excludes output for any operations performed by trigger","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108212,"byte_end":108283,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ programs from the output of EXPLAIN QUERY PLAN commands.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108288,"byte_end":108348,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108541,"byte_end":108571,"line_start":36,"line_end":36,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_RESET_DATABASE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_RESET_DATABASE","value":"DbConfig::SQLITE_DBCONFIG_RESET_DATABASE","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"reset\" flag for a database connection.\n Run VACUUM with this flag set to reset the database.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"reset\" flag for a database connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108403,"byte_end":108475,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ Run VACUUM with this flag set to reset the database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108480,"byte_end":108536,"line_start":35,"line_end":35,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108665,"byte_end":108690,"line_start":38,"line_end":38,"column_start":5,"column_end":30},"name":"SQLITE_DBCONFIG_DEFENSIVE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DEFENSIVE","value":"DbConfig::SQLITE_DBCONFIG_DEFENSIVE","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" Activates or deactivates the \"defensive\" flag for a database connection.\n","sig":null,"attributes":[{"value":"/ Activates or deactivates the \"defensive\" flag for a database connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":108584,"byte_end":108660,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107364,"byte_end":107372,"line_start":15,"line_end":15,"column_start":10,"column_end":18},"name":"DbConfig","qualname":"::config::DbConfig","value":"pub enum DbConfig {\n    SQLITE_DBCONFIG_ENABLE_FKEY = ,\n    SQLITE_DBCONFIG_ENABLE_TRIGGER = ,\n    SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = ,\n    SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = ,\n    SQLITE_DBCONFIG_ENABLE_QPSG = ,\n    SQLITE_DBCONFIG_TRIGGER_EQP = ,\n    SQLITE_DBCONFIG_RESET_DATABASE = ,\n    SQLITE_DBCONFIG_DEFENSIVE = ,\n}","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355}],"decl_id":null,"docs":" Database Connection Configuration Options\n See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.\n","sig":null,"attributes":[{"value":"/ Database Connection Configuration Options","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107074,"byte_end":107119,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ See [Database Connection Configuration Options](https://sqlite.org/c3ref/c_dbconfig_enable_fkey.html) for details.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107120,"byte_end":107238,"line_start":10,"line_end":10,"column_start":1,"column_end":119}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107239,"byte_end":107251,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107252,"byte_end":107298,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107299,"byte_end":107316,"line_start":13,"line_end":13,"column_start":1,"column_end":18}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":107317,"byte_end":107354,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110867,"byte_end":110876,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"db_config","qualname":"<Connection>::db_config","value":"pub fn db_config(&Self, DbConfig) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current value of a `config`.","sig":null,"attributes":[{"value":"/ Returns the current value of a `config`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":109982,"byte_end":110026,"line_start":67,"line_end":67,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110031,"byte_end":110034,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FKEY`: return `false` or `true` to indicate","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110039,"byte_end":110112,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/   whether FK enforcement is off or on","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110117,"byte_end":110158,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_TRIGGER`: return `false` or `true` to indicate","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110163,"byte_end":110239,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/   whether triggers are disabled or enabled","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110244,"byte_end":110290,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER`: return `false` or `true` to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110295,"byte_end":110369,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/   indicate whether `fts3_tokenizer` are disabled or enabled","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110374,"byte_end":110437,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ - `SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE`: return `false` to indicate","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110442,"byte_end":110510,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/   checkpoints-on-close are not disabled or `true` if they are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110515,"byte_end":110580,"line_start":76,"line_end":76,"column_start":5,"column_end":70}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_QPSG`: return `false` or `true` to indicate","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110585,"byte_end":110658,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/   whether the QPSG is disabled or enabled","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110663,"byte_end":110708,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/ - `SQLITE_DBCONFIG_TRIGGER_EQP`: return `false` to indicate","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110713,"byte_end":110776,"line_start":79,"line_end":79,"column_start":5,"column_end":68}},{"value":"/   output-for-trigger are not disabled or `true` if it is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110781,"byte_end":110841,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":110846,"byte_end":110855,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":112014,"byte_end":112027,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"set_db_config","qualname":"<Connection>::set_db_config","value":"pub fn set_db_config(&Self, DbConfig, bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Make configuration changes to a database connection","sig":null,"attributes":[{"value":"/ Make configuration changes to a database connection","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111208,"byte_end":111263,"line_start":96,"line_end":96,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111268,"byte_end":111271,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FKEY`: `false` to disable FK enforcement,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111276,"byte_end":111347,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/   `true` to enable FK enforcement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111352,"byte_end":111389,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_TRIGGER`: `false` to disable triggers, `true`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111394,"byte_end":111469,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/   to enable triggers","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111474,"byte_end":111498,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER`: `false` to disable","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111503,"byte_end":111568,"line_start":102,"line_end":102,"column_start":5,"column_end":70}},{"value":"/   `fts3_tokenizer()`, `true` to enable `fts3_tokenizer()`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111573,"byte_end":111634,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/ - `SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE`: `false` (the default) to enable","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111639,"byte_end":111712,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   checkpoints-on-close, `true` to disable them","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111717,"byte_end":111767,"line_start":105,"line_end":105,"column_start":5,"column_end":55}},{"value":"/ - `SQLITE_DBCONFIG_ENABLE_QPSG`: `false` to disable the QPSG, `true` to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111772,"byte_end":111847,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/   enable QPSG","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111852,"byte_end":111869,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/ - `SQLITE_DBCONFIG_TRIGGER_EQP`: `false` to disable output for trigger","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111874,"byte_end":111948,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/   programs, `true` to enable it","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111953,"byte_end":111988,"line_start":109,"line_end":109,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":111993,"byte_end":112002,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127487,"byte_end":127493,"line_start":6,"line_end":6,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::params::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" This trait exists just to ensure that the only impls of `trait Params`\n that are allowed are ones in this crate.\n","sig":null,"attributes":[{"value":"/ This trait exists just to ensure that the only impls of `trait Params`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127349,"byte_end":127423,"line_start":4,"line_end":4,"column_start":5,"column_end":79}},{"value":"/ that are allowed are ones in this crate.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127428,"byte_end":127472,"line_start":5,"line_end":5,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133478,"byte_end":133484,"line_start":157,"line_end":157,"column_start":11,"column_end":17},"name":"Params","qualname":"::params::Params","value":"Params: Sealed","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" Trait used for [sets of parameter][params] passed into SQL\n statements/queries.","sig":null,"attributes":[{"value":"/ Trait used for [sets of parameter][params] passed into SQL","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127520,"byte_end":127582,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ statements/queries.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127583,"byte_end":127606,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127607,"byte_end":127610,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [params]: https://www.sqlite.org/c3ref/bind_blob.html","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127611,"byte_end":127668,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127669,"byte_end":127672,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note: Currently, this trait can only be implemented inside this crate.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127673,"byte_end":127747,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ Additionally, it's methods (which are `doc(hidden)`) should currently not be","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127748,"byte_end":127828,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ considered part of the stable API, although it's possible they will","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127829,"byte_end":127900,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ stabilize in the future.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127901,"byte_end":127929,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127930,"byte_end":127933,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Passing parameters to SQLite","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127934,"byte_end":127968,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127969,"byte_end":127972,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Many functions in this library let you pass parameters to SQLite. Doing this","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":127973,"byte_end":128053,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ lets you avoid any risk of SQL injection, and is simpler than escaping","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128054,"byte_end":128128,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ things manually. Aside from deprecated functions and a few helpers, this is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128129,"byte_end":128208,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ indicated by the function taking a generic argument that implements `Params`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128209,"byte_end":128289,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ (this trait).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128290,"byte_end":128307,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128308,"byte_end":128311,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ## Positional parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128312,"byte_end":128340,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128341,"byte_end":128344,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For cases where you want to pass a list of parameters where the number of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128345,"byte_end":128422,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ parameters is known at compile time, this can be done in one of the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128423,"byte_end":128494,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ following ways:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128495,"byte_end":128514,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128515,"byte_end":128518,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ - Using the [`rusqlite::params!`](crate::params!) macro, e.g.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128519,"byte_end":128584,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/   `thing.query(rusqlite::params![1, \"foo\", bar])`. This is mostly useful for","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128585,"byte_end":128665,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/   heterogeneous lists of parameters, or lists where the number of parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128666,"byte_end":128746,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/   exceeds 32.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128747,"byte_end":128764,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128765,"byte_end":128768,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - For small heterogeneous lists of parameters, they can either be passed as:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128769,"byte_end":128849,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128850,"byte_end":128853,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/     - an array, as in `thing.query([1i32, 2, 3, 4])` or `thing.query([\"foo\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128854,"byte_end":128934,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/       \"bar\", \"baz\"])`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128935,"byte_end":128961,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128962,"byte_end":128965,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     - a reference to an array of references, as in `thing.query(&[\"foo\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":128966,"byte_end":129042,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/       \"bar\", \"baz\"])` or `thing.query(&[&1i32, &2, &3])`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129043,"byte_end":129104,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129105,"byte_end":129108,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/         (Note: in this case we don't implement this for slices for coherence","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129109,"byte_end":129189,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/         reasons, so it really is only for the \"reference to array\" types —","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129190,"byte_end":129270,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/         hence why the number of parameters must be <= 32 or you need to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129271,"byte_end":129346,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/         reach for `rusqlite::params!`)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129347,"byte_end":129389,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129390,"byte_end":129393,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     Unfortunately, in the current design it's not possible to allow this for","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129394,"byte_end":129474,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/     references to arrays of non-references (e.g. `&[1i32, 2, 3]`). Code like","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129475,"byte_end":129555,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/     this should instead either use `params!`, an array literal, a `&[&dyn","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129556,"byte_end":129633,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/     ToSql]` or if none of those work, [`ParamsFromIter`].","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129634,"byte_end":129695,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129696,"byte_end":129699,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ - As a slice of `ToSql` trait object references, e.g. `&[&dyn ToSql]`. This","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129700,"byte_end":129779,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/   is mostly useful for passing parameter lists around as arguments without","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129780,"byte_end":129858,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/   having every function take a generic `P: Params`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129859,"byte_end":129914,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129915,"byte_end":129918,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Example (positional)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129919,"byte_end":129947,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129948,"byte_end":129951,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129952,"byte_end":129970,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":129971,"byte_end":130020,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130021,"byte_end":130074,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (a, b) VALUES (?, ?)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130075,"byte_end":130153,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130154,"byte_end":130157,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     // Using `rusqlite::params!`:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130158,"byte_end":130195,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(params![1i32, \"blah\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130196,"byte_end":130241,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130242,"byte_end":130245,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     // array literal — non-references","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130246,"byte_end":130289,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     stmt.execute([2i32, 3i32])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130290,"byte_end":130326,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130327,"byte_end":130330,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // array literal — references","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130331,"byte_end":130370,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/     stmt.execute([\"foo\", \"bar\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130371,"byte_end":130409,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130410,"byte_end":130413,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/     // Slice literal, references:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130414,"byte_end":130451,"line_start":77,"line_end":77,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(&[&2i32, &3i32])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130452,"byte_end":130491,"line_start":78,"line_end":78,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130492,"byte_end":130495,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/     // Note: The types behind the references don't have to be `Sized`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130496,"byte_end":130569,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/     stmt.execute(&[\"foo\", \"bar\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130570,"byte_end":130609,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130610,"byte_end":130613,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // However, this doesn't work (see above):","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130614,"byte_end":130664,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/     // stmt.execute(&[1i32, 2i32])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130665,"byte_end":130705,"line_start":84,"line_end":84,"column_start":1,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130706,"byte_end":130720,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130721,"byte_end":130726,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130727,"byte_end":130734,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130735,"byte_end":130738,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ## Named parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130739,"byte_end":130762,"line_start":89,"line_end":89,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130763,"byte_end":130766,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ SQLite lets you name parameters using a number of conventions (\":foo\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130767,"byte_end":130841,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ \"@foo\", \"$foo\"). You can pass named parameters in to SQLite using rusqlite","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130842,"byte_end":130920,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ in a few ways:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130921,"byte_end":130939,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130940,"byte_end":130943,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ - Using the [`rusqlite::named_params!`](crate::named_params!) macro, as in","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":130944,"byte_end":131022,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/   `stmt.execute(named_params!{ \":name\": \"foo\", \":age\": 99 })`. Similar to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131023,"byte_end":131100,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/   the `params` macro, this is most useful for heterogeneous lists of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131101,"byte_end":131173,"line_start":97,"line_end":97,"column_start":1,"column_end":73}},{"value":"/   parameters, or lists where the number of parameters exceeds 32.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131174,"byte_end":131243,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131244,"byte_end":131247,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ - As a slice of `&[(&str, &dyn ToSql)]`. This is what essentially all of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131248,"byte_end":131324,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/   these boil down to in the end, conceptually at least. In theory you can","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131325,"byte_end":131402,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"/   pass this as `stmt`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131403,"byte_end":131429,"line_start":102,"line_end":102,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131430,"byte_end":131433,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - As array references, similar to the positional params. This looks like","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131434,"byte_end":131510,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/   `thing.query(&[(\":foo\", &1i32), (\":bar\", &2i32)])` or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131511,"byte_end":131570,"line_start":105,"line_end":105,"column_start":1,"column_end":60}},{"value":"/   `thing.query(&[(\":foo\", \"abc\"), (\":bar\", \"def\")])`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131571,"byte_end":131628,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131629,"byte_end":131632,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Note: Unbound named parameters will be left to the value they previously","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131633,"byte_end":131709,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ were bound with, falling back to `NULL` for parameters which have never been","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131710,"byte_end":131790,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ bound.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131791,"byte_end":131801,"line_start":110,"line_end":110,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131802,"byte_end":131805,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ### Example (named)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131806,"byte_end":131829,"line_start":112,"line_end":112,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131830,"byte_end":131833,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131834,"byte_end":131852,"line_start":114,"line_end":114,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131853,"byte_end":131908,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ fn insert(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131909,"byte_end":131957,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (key, value) VALUES (:key, :value)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":131958,"byte_end":132050,"line_start":117,"line_end":117,"column_start":1,"column_end":93}},{"value":"/     // Using `rusqlite::params!`:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132051,"byte_end":132088,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/     stmt.execute(named_params! { \":key\": \"one\", \":val\": 2 })?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132089,"byte_end":132155,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // Alternatively:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132156,"byte_end":132181,"line_start":120,"line_end":120,"column_start":1,"column_end":26}},{"value":"/     stmt.execute(&[(\":key\", \"three\"), (\":val\", \"four\")])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132182,"byte_end":132244,"line_start":121,"line_end":121,"column_start":1,"column_end":63}},{"value":"/     // Or:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132245,"byte_end":132259,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/     stmt.execute(&[(\":key\", &100), (\":val\", &200)])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132260,"byte_end":132317,"line_start":123,"line_end":123,"column_start":1,"column_end":58}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132318,"byte_end":132332,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132333,"byte_end":132338,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132339,"byte_end":132346,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132347,"byte_end":132350,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ## No parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132351,"byte_end":132371,"line_start":128,"line_end":128,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132372,"byte_end":132375,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ You can just use an empty array literal for no params. The","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132376,"byte_end":132438,"line_start":130,"line_end":130,"column_start":1,"column_end":63}},{"value":"/ `rusqlite::NO_PARAMS` constant which was so common in previous versions of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132439,"byte_end":132517,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ this library is no longer needed (and is now deprecated).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132518,"byte_end":132579,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132580,"byte_end":132583,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ### Example (no parameters)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132584,"byte_end":132615,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132616,"byte_end":132619,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132620,"byte_end":132638,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132639,"byte_end":132688,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"/ fn delete_all_users(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132689,"byte_end":132747,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/     // Just use an empty array (e.g. `[]`) for no params.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132748,"byte_end":132809,"line_start":139,"line_end":139,"column_start":1,"column_end":62}},{"value":"/     conn.execute(\"DELETE FROM users\", [])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132810,"byte_end":132857,"line_start":140,"line_end":140,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132858,"byte_end":132872,"line_start":141,"line_end":141,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132873,"byte_end":132878,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132879,"byte_end":132886,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132887,"byte_end":132890,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ## Dynamic parameter list","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132891,"byte_end":132920,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132921,"byte_end":132924,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ If you have a number of parameters which is unknown at compile time (for","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":132925,"byte_end":133001,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/ example, building a dynamic query at runtime), you have two choices:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133002,"byte_end":133074,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133075,"byte_end":133078,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ - Use a `&[&dyn ToSql]`, which is nice if you have one otherwise might be","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133079,"byte_end":133156,"line_start":150,"line_end":150,"column_start":1,"column_end":78}},{"value":"/   annoying.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133157,"byte_end":133172,"line_start":151,"line_end":151,"column_start":1,"column_end":16}},{"value":"/ - Use the [`ParamsFromIter`] type. This essentially lets you wrap an","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133173,"byte_end":133245,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"/   iterator some `T: ToSql` with something that implements `Params`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133246,"byte_end":133317,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133318,"byte_end":133321,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ A lot of the considerations here are similar either way, so you should see","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133322,"byte_end":133400,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ the [`ParamsFromIter`] documentation for more info / examples.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133401,"byte_end":133467,"line_start":156,"line_end":156,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133815,"byte_end":133824,"line_start":166,"line_end":166,"column_start":8,"column_end":17},"name":"__bind_in","qualname":"::params::Params::__bind_in","value":"pub fn __bind_in(Self, &mut Statement) -> Result<()>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139735,"byte_end":139749,"line_start":329,"line_end":329,"column_start":12,"column_end":26},"name":"ParamsFromIter","qualname":"::params::ParamsFromIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Adapter type which allows any iterator over [`ToSql`] values to implement\n [`Params`].","sig":null,"attributes":[{"value":"/ Adapter type which allows any iterator over [`ToSql`] values to implement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136291,"byte_end":136368,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/ [`Params`].","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136369,"byte_end":136384,"line_start":234,"line_end":234,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136385,"byte_end":136388,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`params_from_iter`] function.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136389,"byte_end":136453,"line_start":236,"line_end":236,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136454,"byte_end":136457,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ This can be useful if you have something like an `&[String]` (of unknown","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136458,"byte_end":136534,"line_start":238,"line_end":238,"column_start":1,"column_end":77}},{"value":"/ length), and you want to use them with an API that wants something","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136535,"byte_end":136605,"line_start":239,"line_end":239,"column_start":1,"column_end":71}},{"value":"/ implementing `Params`. This way, you can avoid having to allocate storage","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136606,"byte_end":136683,"line_start":240,"line_end":240,"column_start":1,"column_end":78}},{"value":"/ for something like a `&[&dyn ToSql]`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136684,"byte_end":136725,"line_start":241,"line_end":241,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136726,"byte_end":136729,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ This essentially is only ever actually needed when dynamically generating","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136730,"byte_end":136807,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ SQL — static SQL (by definition) has the number of parameters known","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136808,"byte_end":136881,"line_start":244,"line_end":244,"column_start":1,"column_end":72}},{"value":"/ statically. As dynamically generating SQL is itself pretty advanced, this","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136882,"byte_end":136959,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/ API is itself for advanced use cases (See \"Realistic use case\" in the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":136960,"byte_end":137033,"line_start":246,"line_end":246,"column_start":1,"column_end":74}},{"value":"/ examples).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137034,"byte_end":137048,"line_start":247,"line_end":247,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137049,"byte_end":137052,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137053,"byte_end":137066,"line_start":249,"line_end":249,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137067,"byte_end":137070,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ ## Basic usage","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137071,"byte_end":137089,"line_start":251,"line_end":251,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137090,"byte_end":137093,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137094,"byte_end":137112,"line_start":253,"line_end":253,"column_start":1,"column_end":19}},{"value":"/ use rusqlite::{params_from_iter, Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137113,"byte_end":137170,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/ use std::collections::BTreeSet;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137171,"byte_end":137206,"line_start":255,"line_end":255,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137207,"byte_end":137210,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ fn query(conn: &Connection, ids: &BTreeSet<String>) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137211,"byte_end":137282,"line_start":257,"line_end":257,"column_start":1,"column_end":72}},{"value":"/     assert_eq!(ids.len(), 3, \"Unrealistic sample code\");","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137283,"byte_end":137343,"line_start":258,"line_end":258,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137344,"byte_end":137347,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM users WHERE id IN (?, ?, ?)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137348,"byte_end":137430,"line_start":260,"line_end":260,"column_start":1,"column_end":83}},{"value":"/     let _rows = stmt.query(params_from_iter(ids.iter()))?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137431,"byte_end":137493,"line_start":261,"line_end":261,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137494,"byte_end":137497,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     // use _rows...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137498,"byte_end":137521,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137522,"byte_end":137536,"line_start":264,"line_end":264,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137537,"byte_end":137542,"line_start":265,"line_end":265,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137543,"byte_end":137550,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137551,"byte_end":137554,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ## Realistic use case","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137555,"byte_end":137580,"line_start":268,"line_end":268,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137581,"byte_end":137584,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ Here's how you'd use `ParamsFromIter` to call [`Statement::exists`] with a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137585,"byte_end":137663,"line_start":270,"line_end":270,"column_start":1,"column_end":79}},{"value":"/ dynamic number of parameters.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137664,"byte_end":137697,"line_start":271,"line_end":271,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137698,"byte_end":137701,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137702,"byte_end":137720,"line_start":273,"line_end":273,"column_start":1,"column_end":19}},{"value":"/ use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137721,"byte_end":137760,"line_start":274,"line_end":274,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137761,"byte_end":137764,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ pub fn any_active_users(conn: &Connection, usernames: &[String]) -> Result<bool> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137765,"byte_end":137851,"line_start":276,"line_end":276,"column_start":1,"column_end":87}},{"value":"/     if usernames.is_empty() {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137852,"byte_end":137885,"line_start":277,"line_end":277,"column_start":1,"column_end":34}},{"value":"/         return Ok(false);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137886,"byte_end":137915,"line_start":278,"line_end":278,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137916,"byte_end":137925,"line_start":279,"line_end":279,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137926,"byte_end":137929,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/     // Note: `repeat_vars` never returns anything attacker-controlled, so","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":137930,"byte_end":138007,"line_start":281,"line_end":281,"column_start":1,"column_end":78}},{"value":"/     // it's fine to use it in a dynamically-built SQL string.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138008,"byte_end":138073,"line_start":282,"line_end":282,"column_start":1,"column_end":66}},{"value":"/     let vars = repeat_vars(usernames.len());","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138074,"byte_end":138122,"line_start":283,"line_end":283,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138123,"byte_end":138126,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/     let sql = format!(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138127,"byte_end":138153,"line_start":285,"line_end":285,"column_start":1,"column_end":27}},{"value":"/         // In practice this would probably be better as an `EXISTS` query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138154,"byte_end":138232,"line_start":286,"line_end":286,"column_start":1,"column_end":79}},{"value":"/         \"SELECT 1 FROM user WHERE is_active AND name IN ({}) LIMIT 1\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138233,"byte_end":138307,"line_start":287,"line_end":287,"column_start":1,"column_end":75}},{"value":"/         vars,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138308,"byte_end":138325,"line_start":288,"line_end":288,"column_start":1,"column_end":18}},{"value":"/     );","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138326,"byte_end":138336,"line_start":289,"line_end":289,"column_start":1,"column_end":11}},{"value":"/     let mut stmt = conn.prepare(&sql)?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138337,"byte_end":138380,"line_start":290,"line_end":290,"column_start":1,"column_end":44}},{"value":"/     stmt.exists(rusqlite::params_from_iter(usernames))","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138381,"byte_end":138439,"line_start":291,"line_end":291,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138440,"byte_end":138445,"line_start":292,"line_end":292,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138446,"byte_end":138449,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ // Helper function to return a comma-separated sequence of `?`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138450,"byte_end":138517,"line_start":294,"line_end":294,"column_start":1,"column_end":68}},{"value":"/ // - `repeat_vars(0) => panic!(...)`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138518,"byte_end":138558,"line_start":295,"line_end":295,"column_start":1,"column_end":41}},{"value":"/ // - `repeat_vars(1) => \"?\"`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138559,"byte_end":138591,"line_start":296,"line_end":296,"column_start":1,"column_end":33}},{"value":"/ // - `repeat_vars(2) => \"?,?\"`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138592,"byte_end":138626,"line_start":297,"line_end":297,"column_start":1,"column_end":35}},{"value":"/ // - `repeat_vars(3) => \"?,?,?\"`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138627,"byte_end":138663,"line_start":298,"line_end":298,"column_start":1,"column_end":37}},{"value":"/ // - ...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138664,"byte_end":138676,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"/ fn repeat_vars(count: usize) -> String {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138677,"byte_end":138721,"line_start":300,"line_end":300,"column_start":1,"column_end":45}},{"value":"/     assert_ne!(count, 0);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138722,"byte_end":138751,"line_start":301,"line_end":301,"column_start":1,"column_end":30}},{"value":"/     let mut s = \"?,\".repeat(count);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138752,"byte_end":138791,"line_start":302,"line_end":302,"column_start":1,"column_end":40}},{"value":"/     // Remove trailing comma","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138792,"byte_end":138824,"line_start":303,"line_end":303,"column_start":1,"column_end":33}},{"value":"/     s.pop();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138825,"byte_end":138841,"line_start":304,"line_end":304,"column_start":1,"column_end":17}},{"value":"/     s","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138842,"byte_end":138851,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138852,"byte_end":138857,"line_start":306,"line_end":306,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138858,"byte_end":138865,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138866,"byte_end":138869,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ That is fairly complex, and even so would need even more work to be fully","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138870,"byte_end":138947,"line_start":309,"line_end":309,"column_start":1,"column_end":78}},{"value":"/ production-ready:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138948,"byte_end":138969,"line_start":310,"line_end":310,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138970,"byte_end":138973,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ - production code should ensure `usernames` isn't so large that it will","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":138974,"byte_end":139049,"line_start":312,"line_end":312,"column_start":1,"column_end":76}},{"value":"/   surpass [`conn.limit(Limit::SQLITE_LIMIT_VARIABLE_NUMBER)`][limits]),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139050,"byte_end":139125,"line_start":313,"line_end":313,"column_start":1,"column_end":76}},{"value":"/   chunking if too large. (Note that the limits api requires rusqlite to have","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139126,"byte_end":139206,"line_start":314,"line_end":314,"column_start":1,"column_end":81}},{"value":"/   the \"limits\" feature).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139207,"byte_end":139235,"line_start":315,"line_end":315,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139236,"byte_end":139239,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ - `repeat_vars` can be implemented in a way that avoids needing to allocate","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139240,"byte_end":139319,"line_start":317,"line_end":317,"column_start":1,"column_end":80}},{"value":"/   a String.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139320,"byte_end":139335,"line_start":318,"line_end":318,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139336,"byte_end":139339,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ - Etc...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139340,"byte_end":139352,"line_start":320,"line_end":320,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139353,"byte_end":139356,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [limits]: crate::Connection::limit","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139357,"byte_end":139395,"line_start":322,"line_end":322,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139396,"byte_end":139399,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ This complexity reflects the fact that `ParamsFromIter` is mainly intended","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139400,"byte_end":139478,"line_start":324,"line_end":324,"column_start":1,"column_end":79}},{"value":"/ for advanced use cases — most of the time you should know how many","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139479,"byte_end":139551,"line_start":325,"line_end":325,"column_start":1,"column_end":71}},{"value":"/ parameters you have statically (and if you don't, you're either doing","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139552,"byte_end":139625,"line_start":326,"line_end":326,"column_start":1,"column_end":74}},{"value":"/ something tricky, or should take a moment to think about the design).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139626,"byte_end":139699,"line_start":327,"line_end":327,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139862,"byte_end":139878,"line_start":334,"line_end":334,"column_start":8,"column_end":24},"name":"params_from_iter","qualname":"::params::params_from_iter","value":"pub fn params_from_iter<I>(I) -> ParamsFromIter<I> where I: IntoIterator,\nI::Item: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Constructor function for a [`ParamsFromIter`]. See its documentation for\n more.\n","sig":null,"attributes":[{"value":"/ Constructor function for a [`ParamsFromIter`]. See its documentation for","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139758,"byte_end":139834,"line_start":331,"line_end":331,"column_start":1,"column_end":77}},{"value":"/ more.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139835,"byte_end":139844,"line_start":332,"line_end":332,"column_start":1,"column_end":10}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":139845,"byte_end":139854,"line_start":333,"line_end":333,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144802,"byte_end":144820,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"pragma_query_value","qualname":"<Connection>::pragma_query_value","value":"pub fn pragma_query_value<T, F>(&Self, Option<DatabaseName>, &str, F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current value of `pragma_name`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144466,"byte_end":144511,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144516,"byte_end":144519,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return multiple rows/values which cannot be retrieved","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144524,"byte_end":144599,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ with this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144604,"byte_end":144625,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144630,"byte_end":144633,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144638,"byte_end":144734,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ `SELECT user_version FROM pragma_user_version;`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144739,"byte_end":144790,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145366,"byte_end":145378,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"pragma_query","qualname":"<Connection>::pragma_query","value":"pub fn pragma_query<F>(&Self, Option<DatabaseName>, &str, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current rows/values of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current rows/values of `pragma_name`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145147,"byte_end":145198,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145203,"byte_end":145206,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145211,"byte_end":145307,"line_start":184,"line_end":184,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_collation_list;`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145312,"byte_end":145354,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":146333,"byte_end":146339,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"pragma","qualname":"<Connection>::pragma","value":"pub fn pragma<F, V>(&Self, Option<DatabaseName>, &str, V, F) -> Result<()>\nwhere F: FnMut(&Row) -> Result<()>, V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Query the current value(s) of `pragma_name` associated to\n `pragma_value`.","sig":null,"attributes":[{"value":"/ Query the current value(s) of `pragma_name` associated to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145887,"byte_end":145948,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ `pragma_value`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145953,"byte_end":145972,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145977,"byte_end":145980,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method can be used with query-only pragmas which need an argument","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":145985,"byte_end":146059,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ (e.g. `table_info('one_tbl')`) or pragmas which returns value(s)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":146064,"byte_end":146132,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ (e.g. `integrity_check`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":146137,"byte_end":146166,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":146171,"byte_end":146174,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":146179,"byte_end":146275,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_table_info(?);`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":146280,"byte_end":146321,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147320,"byte_end":147333,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"pragma_update","qualname":"<Connection>::pragma_update","value":"pub fn pragma_update<V>(&Self, Option<DatabaseName>, &str, V) -> Result<()>\nwhere V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name`.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147160,"byte_end":147197,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147202,"byte_end":147205,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return the updated value which cannot be retrieved","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147210,"byte_end":147282,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ with this method.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147287,"byte_end":147308,"line_start":246,"line_end":246,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":148037,"byte_end":148060,"line_start":269,"line_end":269,"column_start":12,"column_end":35},"name":"pragma_update_and_check","qualname":"<Connection>::pragma_update_and_check","value":"pub fn pragma_update_and_check<F, T,\n                               V>(&Self, Option<DatabaseName>, &str, V, F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>, V: ToSql","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name` and return the updated value.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name` and return the updated value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147886,"byte_end":147952,"line_start":266,"line_end":266,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147957,"byte_end":147960,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Only few pragmas automatically return the updated value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":147965,"byte_end":148025,"line_start":268,"line_end":268,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":160670,"byte_end":160674,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An handle for the resulting rows of a query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":160545,"byte_end":160593,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"must_use = \"Rows is lazy and will do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":160594,"byte_end":160658,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161704,"byte_end":161708,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows>::next","value":"pub fn next(&mut Self) -> Result<Option<&Row>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Ok(Some(Row))` if\n there is another row, `Err(...)` if there was an error\n getting the next row, and `Ok(None)` if all rows have been retrieved.","sig":null,"attributes":[{"value":"/ Attempt to get the next row from the query. Returns `Ok(Some(Row))` if","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":160930,"byte_end":161004,"line_start":23,"line_end":23,"column_start":5,"column_end":79}},{"value":"/ there is another row, `Err(...)` if there was an error","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161009,"byte_end":161067,"line_start":24,"line_end":24,"column_start":5,"column_end":63}},{"value":"/ getting the next row, and `Ok(None)` if all rows have been retrieved.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161072,"byte_end":161145,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161150,"byte_end":161153,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161158,"byte_end":161169,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161174,"byte_end":161177,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This interface is not compatible with Rust's `Iterator` trait, because","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161182,"byte_end":161256,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ the lifetime of the returned row is tied to the lifetime of `self`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161261,"byte_end":161332,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ This is a fallible \"streaming iterator\". For a more natural interface,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161337,"byte_end":161411,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ consider using [`query_map`](crate::Statement::query_map) or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161416,"byte_end":161480,"line_start":32,"line_end":32,"column_start":5,"column_end":69}},{"value":"/ [`query_and_then`](crate::Statement::query_and_then) instead, which","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161485,"byte_end":161556,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ return types that implement `Iterator`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161561,"byte_end":161604,"line_start":34,"line_end":34,"column_start":5,"column_end":48}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161609,"byte_end":161649,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161683,"byte_end":161692,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162273,"byte_end":162276,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"map","qualname":"<Rows>::map","value":"pub fn map<F, B>(Self, F) -> Map where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`Map`], which\n implements `FallibleIterator`.\n ```rust,no_run\n use fallible_iterator::FallibleIterator;\n # use rusqlite::{Result, Statement};\n fn query(stmt: &mut Statement) -> Result<Vec<i64>> {\n     let rows = stmt.query([])?;\n     rows.map(|r| r.get(0)).collect()\n }\n ```\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`Map`], which","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161815,"byte_end":161874,"line_start":42,"line_end":42,"column_start":5,"column_end":64}},{"value":"/ implements `FallibleIterator`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161879,"byte_end":161913,"line_start":43,"line_end":43,"column_start":5,"column_end":39}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161918,"byte_end":161936,"line_start":44,"line_end":44,"column_start":5,"column_end":23}},{"value":"/ use fallible_iterator::FallibleIterator;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161941,"byte_end":161985,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/ # use rusqlite::{Result, Statement};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":161990,"byte_end":162030,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ fn query(stmt: &mut Statement) -> Result<Vec<i64>> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162035,"byte_end":162091,"line_start":47,"line_end":47,"column_start":5,"column_end":61}},{"value":"/     let rows = stmt.query([])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162096,"byte_end":162131,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/     rows.map(|r| r.get(0)).collect()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162136,"byte_end":162176,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162181,"byte_end":162186,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162191,"byte_end":162198,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162252,"byte_end":162261,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162533,"byte_end":162539,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"mapped","qualname":"<Rows>::mapped","value":"pub fn mapped<F, B>(Self, F) -> MappedRows where F: FnMut(&Row) -> Result<B>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows`, converting it to a [`MappedRows`], which\n implements `Iterator`.\n","sig":null,"attributes":[{"value":"/ Map over this `Rows`, converting it to a [`MappedRows`], which","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162410,"byte_end":162476,"line_start":61,"line_end":61,"column_start":5,"column_end":71}},{"value":"/ implements `Iterator`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162481,"byte_end":162507,"line_start":62,"line_end":62,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162512,"byte_end":162521,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162890,"byte_end":162898,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Rows>::and_then","value":"pub fn and_then<F, T, E>(Self, F) -> AndThenRows where F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Map over this `Rows` with a fallible function, converting it to a\n [`AndThenRows`], which implements `Iterator` (instead of\n `FallibleStreamingIterator`).\n","sig":null,"attributes":[{"value":"/ Map over this `Rows` with a fallible function, converting it to a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162692,"byte_end":162761,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ [`AndThenRows`], which implements `Iterator` (instead of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162766,"byte_end":162826,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/ `FallibleStreamingIterator`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162831,"byte_end":162864,"line_start":73,"line_end":73,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":162869,"byte_end":162878,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163130,"byte_end":163136,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Rows>::as_ref","value":"pub fn as_ref(&Self) -> Option<&Statement>","parent":null,"children":[],"decl_id":null,"docs":" Give access to the underlying statement\n","sig":null,"attributes":[{"value":"/ Give access to the underlying statement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163059,"byte_end":163102,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163107,"byte_end":163118,"line_start":83,"line_end":83,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163875,"byte_end":163878,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"Map","qualname":"::row::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"decl_id":null,"docs":" `F` is used to transform the _streaming_ iterator into a _fallible_\n iterator.\n","sig":null,"attributes":[{"value":"/ `F` is used to transform the _streaming_ iterator into a _fallible_","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163712,"byte_end":163783,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163784,"byte_end":163797,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163798,"byte_end":163863,"line_start":116,"line_end":116,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164475,"byte_end":164485,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164249,"byte_end":164307,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164308,"byte_end":164311,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ `F` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164312,"byte_end":164383,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164384,"byte_end":164397,"line_start":141,"line_end":141,"column_start":1,"column_end":14}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164398,"byte_end":164463,"line_start":142,"line_end":142,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":165052,"byte_end":165063,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query, with an Error type","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164872,"byte_end":164949,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ unifying with Error.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164950,"byte_end":164974,"line_start":165,"line_end":165,"column_start":1,"column_end":25}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164975,"byte_end":165040,"line_start":166,"line_end":166,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167044,"byte_end":167047,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":712}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[{"value":"/ A single result row of a query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":166997,"byte_end":167032,"line_start":242,"line_end":242,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167616,"byte_end":167626,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"get_unwrap","qualname":"<Row>::get_unwrap","value":"pub fn get_unwrap<I: RowIndex, T: FromSql>(&Self, I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167135,"byte_end":167194,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167199,"byte_end":167202,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167207,"byte_end":167221,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167226,"byte_end":167229,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Panics if calling [`row.get(idx)`](Row::get) would return an error,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167234,"byte_end":167305,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ including:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167310,"byte_end":167324,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167329,"byte_end":167332,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ * If the underlying SQLite column type is not a valid type as a source","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167337,"byte_end":167411,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/   for `T`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167416,"byte_end":167429,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ * If the underlying SQLite integral value is outside the range","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167434,"byte_end":167500,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/   representable by `T`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167505,"byte_end":167531,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ * If `idx` is outside the range of columns in the returned query","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167536,"byte_end":167604,"line_start":259,"line_end":259,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168422,"byte_end":168425,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"get","qualname":"<Row>::get","value":"pub fn get<I: RowIndex, T: FromSql>(&Self, I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167716,"byte_end":167775,"line_start":264,"line_end":264,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167780,"byte_end":167783,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167788,"byte_end":167802,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167807,"byte_end":167810,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnType` if the underlying SQLite column","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167815,"byte_end":167888,"line_start":268,"line_end":268,"column_start":5,"column_end":78}},{"value":"/ type is not a valid type as a source for `T`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167893,"byte_end":167942,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167947,"byte_end":167950,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167955,"byte_end":168027,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168032,"byte_end":168062,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168067,"byte_end":168070,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168075,"byte_end":168147,"line_start":274,"line_end":274,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168152,"byte_end":168174,"line_start":275,"line_end":275,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168179,"byte_end":168182,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the result type is i128 (which requires the `i128_blob` feature to be","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168187,"byte_end":168263,"line_start":277,"line_end":277,"column_start":5,"column_end":81}},{"value":"/ enabled), and the underlying SQLite column is a blob whose size is not","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168268,"byte_end":168342,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ 16 bytes, `Error::InvalidColumnType` will also be returned.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":168347,"byte_end":168410,"line_start":279,"line_end":279,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169942,"byte_end":169949,"line_start":314,"line_end":314,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Row>::get_ref","value":"pub fn get_ref<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169219,"byte_end":169294,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169299,"byte_end":169357,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169362,"byte_end":169365,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169370,"byte_end":169445,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169450,"byte_end":169522,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ it can be somewhat difficult to use, and most callers will be better","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169527,"byte_end":169599,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ served by [`get`](Row::get) or [`get_unwrap`](Row::get_unwrap).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169604,"byte_end":169671,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169676,"byte_end":169679,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169684,"byte_end":169698,"line_start":307,"line_end":307,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169703,"byte_end":169706,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169711,"byte_end":169783,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169788,"byte_end":169818,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169823,"byte_end":169826,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169831,"byte_end":169903,"line_start":312,"line_end":312,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":169908,"byte_end":169930,"line_start":313,"line_end":313,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171055,"byte_end":171069,"line_start":338,"line_end":338,"column_start":12,"column_end":26},"name":"get_ref_unwrap","qualname":"<Row>::get_ref_unwrap","value":"pub fn get_ref_unwrap<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170320,"byte_end":170395,"line_start":323,"line_end":323,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170400,"byte_end":170458,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170463,"byte_end":170466,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170471,"byte_end":170546,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170551,"byte_end":170623,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ it can be difficult to use, and most callers will be better served by","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170628,"byte_end":170701,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ [`get`](Row::get) or [`get_unwrap`](Row::get_unwrap).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170706,"byte_end":170763,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170768,"byte_end":170771,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170776,"byte_end":170790,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170795,"byte_end":170798,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Panics if calling [`row.get_ref(idx)`](Row::get_ref) would return an","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170803,"byte_end":170875,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/ error, including:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170880,"byte_end":170901,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170906,"byte_end":170909,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ * If `idx` is outside the range of columns in the returned query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170914,"byte_end":170983,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ * If `idx` is not a valid column name for this row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":170988,"byte_end":171043,"line_start":337,"line_end":337,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171290,"byte_end":171305,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row>::get_raw_checked","value":"pub fn get_raw_checked<I: RowIndex>(&Self, I) -> Result<ValueRef>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [`get_ref`](Row::get_ref).\n","sig":null,"attributes":[{"value":"/ Renamed to [`get_ref`](Row::get_ref).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171162,"byte_end":171203,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"deprecated = \"Use [`get_ref`](Row::get_ref) instead.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171208,"byte_end":171264,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171269,"byte_end":171278,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171553,"byte_end":171560,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row>::get_raw","value":"pub fn get_raw<I: RowIndex>(&Self, I) -> ValueRef","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [`get_ref_unwrap`](Row::get_ref_unwrap).\n","sig":null,"attributes":[{"value":"/ Renamed to [`get_ref_unwrap`](Row::get_ref_unwrap).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171397,"byte_end":171452,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"deprecated = \"Use [`get_ref_unwrap`](Row::get_ref_unwrap) instead.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171457,"byte_end":171527,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171532,"byte_end":171541,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171928,"byte_end":171934,"line_start":366,"line_end":366,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::row::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" This trait exists just to ensure that the only impls of `trait Params`\n that are allowed are ones in this crate.\n","sig":null,"attributes":[{"value":"/ This trait exists just to ensure that the only impls of `trait Params`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171790,"byte_end":171864,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ that are allowed are ones in this crate.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171869,"byte_end":171913,"line_start":365,"line_end":365,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":737},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172134,"byte_end":172142,"line_start":374,"line_end":374,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex: sealed::Sealed","parent":null,"children":[{"krate":0,"index":738}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.","sig":null,"attributes":[{"value":"/ A trait implemented by types that can index into columns of a row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171998,"byte_end":172068,"line_start":371,"line_end":371,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172069,"byte_end":172072,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ It is only implemented for `usize` and `&str`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172073,"byte_end":172123,"line_start":373,"line_end":373,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172265,"byte_end":172268,"line_start":377,"line_end":377,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"pub fn idx(&Self, &Statement) -> Result<usize>","parent":{"krate":0,"index":737},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[{"value":"/ Returns the index of the appropriate column, or `None` if no such","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172165,"byte_end":172234,"line_start":375,"line_end":375,"column_start":5,"column_end":74}},{"value":"/ column exists.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172239,"byte_end":172257,"line_start":376,"line_end":376,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177835,"byte_end":177844,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[{"value":"/ A prepared statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177798,"byte_end":177823,"line_start":17,"line_end":17,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180364,"byte_end":180371,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement>::execute","value":"pub fn execute<P: Params>(&mut Self, P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[{"value":"/ Execute the prepared statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177946,"byte_end":177981,"line_start":24,"line_end":24,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177986,"byte_end":177989,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177994,"byte_end":178069,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178074,"byte_end":178110,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178115,"byte_end":178118,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178123,"byte_end":178137,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178142,"byte_end":178145,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178150,"byte_end":178188,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178193,"byte_end":178196,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178201,"byte_end":178219,"line_start":33,"line_end":33,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178224,"byte_end":178273,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178278,"byte_end":178331,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"/     let mut stmt = conn.prepare(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178336,"byte_end":178417,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/     // The `rusqlite::params!` macro is mostly useful when the parameters do not","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178422,"byte_end":178506,"line_start":37,"line_end":37,"column_start":5,"column_end":89}},{"value":"/     // all have the same type, or if there are more than 32 parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178511,"byte_end":178585,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/     // at once.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178590,"byte_end":178609,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/     stmt.execute(params![1i32])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178614,"byte_end":178651,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/     // However, it's not required, many cases are fine as:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178656,"byte_end":178718,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/     stmt.execute(&[&2i32])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178723,"byte_end":178755,"line_start":42,"line_end":42,"column_start":5,"column_end":37}},{"value":"/     // Or even:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178760,"byte_end":178779,"line_start":43,"line_end":43,"column_start":5,"column_end":24}},{"value":"/     stmt.execute([2i32])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178784,"byte_end":178814,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178819,"byte_end":178833,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178838,"byte_end":178843,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178848,"byte_end":178855,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178860,"byte_end":178863,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ### Use with named parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178868,"byte_end":178901,"line_start":49,"line_end":49,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178906,"byte_end":178909,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178914,"byte_end":178932,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178937,"byte_end":178992,"line_start":52,"line_end":52,"column_start":5,"column_end":60}},{"value":"/ fn insert(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":178997,"byte_end":179045,"line_start":53,"line_end":53,"column_start":5,"column_end":53}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (key, value) VALUES (:key, :value)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179050,"byte_end":179142,"line_start":54,"line_end":54,"column_start":5,"column_end":97}},{"value":"/     // The `rusqlite::named_params!` macro (like `params!`) is useful for heterogeneous","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179147,"byte_end":179238,"line_start":55,"line_end":55,"column_start":5,"column_end":96}},{"value":"/     // sets of parameters (where all parameters are not the same type), or for queries","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179243,"byte_end":179333,"line_start":56,"line_end":56,"column_start":5,"column_end":95}},{"value":"/     // with many (more than 32) statically known parameters.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179338,"byte_end":179402,"line_start":57,"line_end":57,"column_start":5,"column_end":69}},{"value":"/     stmt.execute(named_params! { \":key\": \"one\", \":val\": 2 })?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179407,"byte_end":179473,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/     // However, named parameters can also be passed like:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179478,"byte_end":179539,"line_start":59,"line_end":59,"column_start":5,"column_end":66}},{"value":"/     stmt.execute(&[(\":key\", \"three\"), (\":val\", \"four\")])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179544,"byte_end":179606,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     // Or even: (note that a &T is required for the value type, currently)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179611,"byte_end":179689,"line_start":61,"line_end":61,"column_start":5,"column_end":83}},{"value":"/     stmt.execute(&[(\":key\", &100), (\":val\", &200)])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179694,"byte_end":179751,"line_start":62,"line_end":62,"column_start":5,"column_end":62}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179756,"byte_end":179770,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179775,"byte_end":179780,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179785,"byte_end":179792,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179797,"byte_end":179800,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ### Use without parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179805,"byte_end":179835,"line_start":67,"line_end":67,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179840,"byte_end":179843,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179848,"byte_end":179866,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179871,"byte_end":179920,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/ fn delete_all(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179925,"byte_end":179977,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/     let mut stmt = conn.prepare(\"DELETE FROM users\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":179982,"byte_end":180040,"line_start":72,"line_end":72,"column_start":5,"column_end":63}},{"value":"/     stmt.execute([])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180045,"byte_end":180071,"line_start":73,"line_end":73,"column_start":5,"column_end":31}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180076,"byte_end":180090,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180095,"byte_end":180100,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180105,"byte_end":180112,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180117,"byte_end":180120,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180125,"byte_end":180138,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180143,"byte_end":180146,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180151,"byte_end":180224,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180229,"byte_end":180300,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180305,"byte_end":180338,"line_start":82,"line_end":82,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180343,"byte_end":180352,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181422,"byte_end":181435,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement>::execute_named","value":"pub fn execute_named(&mut Self, &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s).","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180513,"byte_end":180572,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180577,"byte_end":180580,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::execute`],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180585,"byte_end":180658,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180663,"byte_end":180712,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180717,"byte_end":180720,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180725,"byte_end":180799,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180804,"byte_end":180876,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `execute_named`, or `NULL` if they have never","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180881,"byte_end":180954,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ been bound.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180959,"byte_end":180974,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180979,"byte_end":180982,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":180987,"byte_end":181062,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181067,"byte_end":181103,"line_start":100,"line_end":100,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181108,"byte_end":181111,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181116,"byte_end":181129,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181134,"byte_end":181137,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181142,"byte_end":181215,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181220,"byte_end":181291,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181296,"byte_end":181329,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"deprecated = \"You can use `execute` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181334,"byte_end":181396,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181401,"byte_end":181410,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182101,"byte_end":182107,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement>::insert","value":"pub fn insert<P: Params>(&mut Self, P) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[{"value":"/ Execute an INSERT and return the ROWID.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181537,"byte_end":181580,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181585,"byte_end":181588,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181593,"byte_end":181603,"line_start":115,"line_end":115,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181608,"byte_end":181611,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181616,"byte_end":181665,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/ [`execute()`](Statement::execute) intended for queries that insert a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181670,"byte_end":181742,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ single item. It is possible to misuse this function in a way that it","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181747,"byte_end":181819,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ cannot detect, such as by calling it on a statement which _updates_","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181824,"byte_end":181895,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ a single item rather than inserting one. Please don't do that.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181900,"byte_end":181966,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181971,"byte_end":181974,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181979,"byte_end":181992,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":181997,"byte_end":182000,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if no row is inserted or many rows are inserted.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182005,"byte_end":182075,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182080,"byte_end":182089,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185303,"byte_end":185308,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement>::query","value":"pub fn query<P: Params>(&mut Self, P) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement, returning a handle to the resulting","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182360,"byte_end":182431,"line_start":135,"line_end":135,"column_start":5,"column_end":76}},{"value":"/ rows.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182436,"byte_end":182445,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182450,"byte_end":182453,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Due to lifetime restrictions, the rows handle returned by `query` does","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182458,"byte_end":182532,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ not implement the `Iterator` trait. Consider using","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182537,"byte_end":182591,"line_start":139,"line_end":139,"column_start":5,"column_end":59}},{"value":"/ [`query_map`](Statement::query_map) or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182596,"byte_end":182638,"line_start":140,"line_end":140,"column_start":5,"column_end":47}},{"value":"/ [`query_and_then`](Statement::query_and_then) instead, which do.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182643,"byte_end":182711,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182716,"byte_end":182719,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182724,"byte_end":182738,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182743,"byte_end":182746,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ### Use without parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182751,"byte_end":182781,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182786,"byte_end":182789,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182794,"byte_end":182812,"line_start":147,"line_end":147,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182817,"byte_end":182858,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182863,"byte_end":182923,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182928,"byte_end":182992,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/     let mut rows = stmt.query([])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":182997,"byte_end":183036,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183041,"byte_end":183044,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183049,"byte_end":183084,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183089,"byte_end":183133,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/         names.push(row.get(0)?);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183138,"byte_end":183174,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183179,"byte_end":183188,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183193,"byte_end":183196,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183201,"byte_end":183218,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183223,"byte_end":183228,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183233,"byte_end":183240,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183245,"byte_end":183248,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183253,"byte_end":183291,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183296,"byte_end":183299,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183304,"byte_end":183322,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183327,"byte_end":183368,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection, name: &str) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183373,"byte_end":183432,"line_start":166,"line_end":166,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = ?\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183437,"byte_end":183511,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/     let mut rows = stmt.query(rusqlite::params![name])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183516,"byte_end":183576,"line_start":168,"line_end":168,"column_start":5,"column_end":65}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183581,"byte_end":183625,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183630,"byte_end":183648,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183653,"byte_end":183662,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183667,"byte_end":183681,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183686,"byte_end":183691,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183696,"byte_end":183703,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183708,"byte_end":183711,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Or, equivalently (but without the [`params!`] macro).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183716,"byte_end":183773,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183778,"byte_end":183781,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183786,"byte_end":183804,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183809,"byte_end":183850,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection, name: &str) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183855,"byte_end":183914,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = ?\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183919,"byte_end":183993,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/     let mut rows = stmt.query([name])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":183998,"byte_end":184041,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184046,"byte_end":184090,"line_start":183,"line_end":183,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184095,"byte_end":184113,"line_start":184,"line_end":184,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184118,"byte_end":184127,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184132,"byte_end":184146,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184151,"byte_end":184156,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184161,"byte_end":184168,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184173,"byte_end":184176,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ### Use with named parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184181,"byte_end":184214,"line_start":190,"line_end":190,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184219,"byte_end":184222,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184227,"byte_end":184245,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184250,"byte_end":184291,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184296,"byte_end":184343,"line_start":194,"line_end":194,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184348,"byte_end":184426,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query(&[(\":name\", \"one\")])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184431,"byte_end":184487,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184492,"byte_end":184536,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184541,"byte_end":184559,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184564,"byte_end":184573,"line_start":199,"line_end":199,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184578,"byte_end":184592,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184597,"byte_end":184602,"line_start":201,"line_end":201,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184607,"byte_end":184614,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184619,"byte_end":184622,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params!` macro is provided for syntactic convenience,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184627,"byte_end":184701,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184706,"byte_end":184760,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184765,"byte_end":184768,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184773,"byte_end":184791,"line_start":207,"line_end":207,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184796,"byte_end":184851,"line_start":208,"line_end":208,"column_start":5,"column_end":60}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184856,"byte_end":184903,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184908,"byte_end":184986,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query(named_params! { \":name\": \"one\" })?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":184991,"byte_end":185060,"line_start":211,"line_end":211,"column_start":5,"column_end":74}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185065,"byte_end":185109,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185114,"byte_end":185132,"line_start":213,"line_end":213,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185137,"byte_end":185146,"line_start":214,"line_end":214,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185151,"byte_end":185165,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185170,"byte_end":185175,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185180,"byte_end":185187,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185192,"byte_end":185195,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185200,"byte_end":185214,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185219,"byte_end":185222,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185227,"byte_end":185277,"line_start":221,"line_end":221,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185282,"byte_end":185291,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186110,"byte_end":186121,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement>::query_named","value":"pub fn query_named(&mut Self, &[(&str, &dyn ToSql)]) -> Result<Rows>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185436,"byte_end":185507,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ handle for the resulting rows.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185512,"byte_end":185546,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185551,"byte_end":185554,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::query`],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185559,"byte_end":185630,"line_start":231,"line_end":231,"column_start":5,"column_end":76}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185635,"byte_end":185684,"line_start":232,"line_end":232,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185689,"byte_end":185692,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185697,"byte_end":185771,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185776,"byte_end":185848,"line_start":235,"line_end":235,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `query_named`, or `NULL` if they have never been","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185853,"byte_end":185929,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ bound.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185934,"byte_end":185944,"line_start":237,"line_end":237,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185949,"byte_end":185952,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185957,"byte_end":185970,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185975,"byte_end":185978,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":185983,"byte_end":186033,"line_start":241,"line_end":241,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186038,"byte_end":186098,"line_start":242,"line_end":242,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187716,"byte_end":187725,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement>::query_map","value":"pub fn query_map<T, P, F>(&mut Self, P, F) -> Result<MappedRows<, F>> where\nP: Params, F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186224,"byte_end":186298,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ rows, returning an iterator over the mapped function results.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186303,"byte_end":186368,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186373,"byte_end":186376,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `f` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186381,"byte_end":186452,"line_start":250,"line_end":250,"column_start":5,"column_end":76}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186457,"byte_end":186470,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186475,"byte_end":186478,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `stmt.query(params)?.mapped(f)`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186483,"byte_end":186541,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186546,"byte_end":186549,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186554,"byte_end":186568,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186573,"byte_end":186576,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional params","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186581,"byte_end":186615,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186620,"byte_end":186623,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186628,"byte_end":186646,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186651,"byte_end":186692,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186697,"byte_end":186757,"line_start":261,"line_end":261,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186762,"byte_end":186826,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/     let rows = stmt.query_map([], |row| row.get(0))?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186831,"byte_end":186888,"line_start":263,"line_end":263,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186893,"byte_end":186896,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186901,"byte_end":186936,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186941,"byte_end":186974,"line_start":266,"line_end":266,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":186979,"byte_end":187016,"line_start":267,"line_end":267,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187021,"byte_end":187030,"line_start":268,"line_end":268,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187035,"byte_end":187038,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187043,"byte_end":187060,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187065,"byte_end":187070,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187075,"byte_end":187082,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187087,"byte_end":187090,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ### Use with named params","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187095,"byte_end":187124,"line_start":274,"line_end":274,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187129,"byte_end":187132,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187137,"byte_end":187155,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187160,"byte_end":187201,"line_start":277,"line_end":277,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187206,"byte_end":187266,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187271,"byte_end":187350,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_map(&[(\":id\", &\"one\")], |row| row.get(0))?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187355,"byte_end":187428,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187433,"byte_end":187436,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187441,"byte_end":187476,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187481,"byte_end":187514,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187519,"byte_end":187556,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187561,"byte_end":187570,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187575,"byte_end":187578,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187583,"byte_end":187600,"line_start":287,"line_end":287,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187605,"byte_end":187610,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187615,"byte_end":187622,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187627,"byte_end":187641,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187646,"byte_end":187649,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187654,"byte_end":187704,"line_start":292,"line_end":292,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188776,"byte_end":188791,"line_start":320,"line_end":320,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement>::query_map_named","value":"pub fn query_map_named<T, F>(&mut Self, &[(&str, &dyn ToSql)], F)\n-> Result<MappedRows<, F>> where F: FnMut(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":187933,"byte_end":188005,"line_start":301,"line_end":301,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188010,"byte_end":188079,"line_start":302,"line_end":302,"column_start":5,"column_end":74}},{"value":"/ query's rows.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188084,"byte_end":188101,"line_start":303,"line_end":303,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188106,"byte_end":188109,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of [`Statement::query_map`],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188114,"byte_end":188189,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ which can now take named parameters directly.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188194,"byte_end":188243,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188248,"byte_end":188251,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188256,"byte_end":188313,"line_start":308,"line_end":308,"column_start":5,"column_end":62}},{"value":"/ are not included in `params`, they will continue to use the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188318,"byte_end":188381,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ most-recently bound value from a previous call to `query_named`,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188386,"byte_end":188454,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ or `NULL` if they have never been bound.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188459,"byte_end":188503,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188508,"byte_end":188511,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ `f` is used to transform the _streaming_ iterator into a _standard_","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188516,"byte_end":188587,"line_start":313,"line_end":313,"column_start":5,"column_end":76}},{"value":"/ iterator.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188592,"byte_end":188605,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188610,"byte_end":188613,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188618,"byte_end":188632,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188637,"byte_end":188640,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188645,"byte_end":188695,"line_start":318,"line_end":318,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query_map` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":188700,"byte_end":188764,"line_start":319,"line_end":319,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190794,"byte_end":190808,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement>::query_and_then","value":"pub fn query_and_then<T, E, P, F>(&mut Self, P, F) -> Result<AndThenRows<, F>>\nwhere P: Params, E: convert::From<Error>, F: FnMut(&Row) -> Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189008,"byte_end":189082,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ rows, where the function returns a `Result` with `Error` type","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189087,"byte_end":189152,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/ implementing `std::convert::From<Error>` (so errors can be unified).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189157,"byte_end":189229,"line_start":333,"line_end":333,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189234,"byte_end":189237,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `stmt.query(params)?.and_then(f)`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189242,"byte_end":189302,"line_start":335,"line_end":335,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189307,"byte_end":189310,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189315,"byte_end":189329,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189334,"byte_end":189337,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ### Use with named params","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189342,"byte_end":189371,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189376,"byte_end":189379,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189384,"byte_end":189402,"line_start":341,"line_end":341,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189407,"byte_end":189448,"line_start":342,"line_end":342,"column_start":5,"column_end":46}},{"value":"/ struct Person {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189453,"byte_end":189472,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189477,"byte_end":189498,"line_start":344,"line_end":344,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189503,"byte_end":189509,"line_start":345,"line_end":345,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189514,"byte_end":189517,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ fn name_to_person(name: String) -> Result<Person> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189522,"byte_end":189577,"line_start":347,"line_end":347,"column_start":5,"column_end":60}},{"value":"/     // ... check for valid name","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189582,"byte_end":189617,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/     Ok(Person { name })","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189622,"byte_end":189649,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189654,"byte_end":189659,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189664,"byte_end":189667,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<Person>> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189672,"byte_end":189732,"line_start":352,"line_end":352,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189737,"byte_end":189816,"line_start":353,"line_end":353,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_and_then(&[(\":id\", \"one\")], |row| name_to_person(row.get(0)?))?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189821,"byte_end":189915,"line_start":354,"line_end":354,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189920,"byte_end":189923,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189928,"byte_end":189965,"line_start":356,"line_end":356,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":189970,"byte_end":190005,"line_start":357,"line_end":357,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190010,"byte_end":190051,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190056,"byte_end":190065,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190070,"byte_end":190073,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190078,"byte_end":190097,"line_start":361,"line_end":361,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190102,"byte_end":190107,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190112,"byte_end":190119,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190124,"byte_end":190127,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ### Use with positional params","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190132,"byte_end":190166,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190171,"byte_end":190174,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190179,"byte_end":190197,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190202,"byte_end":190243,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190248,"byte_end":190308,"line_start":369,"line_end":369,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = ?\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190313,"byte_end":190390,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/     let rows = stmt.query_and_then([\"one\"], |row| row.get::<_, String>(0))?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190395,"byte_end":190475,"line_start":371,"line_end":371,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190480,"byte_end":190483,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190488,"byte_end":190525,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190530,"byte_end":190565,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190570,"byte_end":190611,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190616,"byte_end":190625,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190630,"byte_end":190633,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190638,"byte_end":190657,"line_start":378,"line_end":378,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190662,"byte_end":190667,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190672,"byte_end":190679,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190684,"byte_end":190687,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190692,"byte_end":190705,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190710,"byte_end":190713,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190718,"byte_end":190768,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":190773,"byte_end":190782,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191817,"byte_end":191837,"line_start":412,"line_end":412,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement>::query_and_then_named","value":"pub fn query_and_then_named<T, E, F>(&mut Self, &[(&str, &dyn ToSql)], F)\n-> Result<AndThenRows<, F>> where E: convert::From<Error>, F: FnMut(&Row) ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191058,"byte_end":191130,"line_start":395,"line_end":395,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191135,"byte_end":191204,"line_start":396,"line_end":396,"column_start":5,"column_end":74}},{"value":"/ query's rows.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191209,"byte_end":191226,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191231,"byte_end":191234,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191239,"byte_end":191288,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/ [`Statement::query_and_then`], which can now take named parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191293,"byte_end":191363,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191368,"byte_end":191381,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191386,"byte_end":191389,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ If any parameters that were in the prepared statement are not included","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191394,"byte_end":191468,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ in `params`, they will continue to use the most-recently bound value","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191473,"byte_end":191545,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ from a previous call to `query_named`, or `NULL` if they have never been","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191550,"byte_end":191626,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/ bound.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191631,"byte_end":191641,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191646,"byte_end":191649,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191654,"byte_end":191668,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191673,"byte_end":191676,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191681,"byte_end":191731,"line_start":410,"line_end":410,"column_start":5,"column_end":55}},{"value":"deprecated = \"You can use `query_and_then` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":191736,"byte_end":191805,"line_start":411,"line_end":411,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192264,"byte_end":192270,"line_start":427,"line_end":427,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement>::exists","value":"pub fn exists<P: Params>(&mut Self, P) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[{"value":"/ Return `true` if a query in the SQL statement it executes returns one","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192099,"byte_end":192172,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ or more rows and `false` if the SQL returns an empty set.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192177,"byte_end":192238,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192243,"byte_end":192252,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193071,"byte_end":193080,"line_start":448,"line_end":448,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement>::query_row","value":"pub fn query_row<T, P, F>(&mut Self, P, F) -> Result<T> where P: Params,\nF: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192441,"byte_end":192511,"line_start":433,"line_end":433,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192516,"byte_end":192531,"line_start":434,"line_end":434,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192536,"byte_end":192539,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192544,"byte_end":192617,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192622,"byte_end":192634,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192639,"byte_end":192642,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192647,"byte_end":192720,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192725,"byte_end":192766,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ [`.optional()`](crate::OptionalExtension::optional) on the result of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192771,"byte_end":192843,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>` (requires that the trait","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192848,"byte_end":192910,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/ `rusqlite::OptionalExtension` is imported).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192915,"byte_end":192962,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192967,"byte_end":192970,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192975,"byte_end":192988,"line_start":445,"line_end":445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":192993,"byte_end":192996,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193001,"byte_end":193059,"line_start":447,"line_end":447,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194251,"byte_end":194266,"line_start":479,"line_end":479,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Statement>::query_row_named","value":"pub fn query_row_named<T, F>(&mut Self, &[(&str, &dyn ToSql)], F) -> Result<T>\nwhere F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193308,"byte_end":193381,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193386,"byte_end":193422,"line_start":459,"line_end":459,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193427,"byte_end":193430,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Note: This function is deprecated in favor of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193435,"byte_end":193484,"line_start":461,"line_end":461,"column_start":5,"column_end":54}},{"value":"/ [`Statement::query_and_then`], which can now take named parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193489,"byte_end":193559,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/ directly.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193564,"byte_end":193577,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193582,"byte_end":193585,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193590,"byte_end":193663,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193668,"byte_end":193680,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193685,"byte_end":193688,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193693,"byte_end":193766,"line_start":468,"line_end":468,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193771,"byte_end":193812,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ [`.optional()`](crate::OptionalExtension::optional) on the result of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193817,"byte_end":193889,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>` (requires that the trait","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193894,"byte_end":193956,"line_start":471,"line_end":471,"column_start":5,"column_end":67}},{"value":"/ `rusqlite::OptionalExtension` is imported).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":193961,"byte_end":194008,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194013,"byte_end":194016,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194021,"byte_end":194034,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194039,"byte_end":194042,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194047,"byte_end":194122,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194127,"byte_end":194170,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `query_row` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194175,"byte_end":194239,"line_start":478,"line_end":478,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194714,"byte_end":194722,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement>::finalize","value":"pub fn finalize(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[{"value":"/ Consumes the statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194437,"byte_end":194464,"line_start":486,"line_end":486,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194469,"byte_end":194472,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194477,"byte_end":194545,"line_start":488,"line_end":488,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194550,"byte_end":194591,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194596,"byte_end":194599,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194604,"byte_end":194617,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194622,"byte_end":194625,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194630,"byte_end":194688,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194693,"byte_end":194702,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195541,"byte_end":195556,"line_start":519,"line_end":519,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement>::parameter_index","value":"pub fn parameter_index(&Self, &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the (one-based) index of an SQL parameter given its name.","sig":null,"attributes":[{"value":"/ Return the (one-based) index of an SQL parameter given its name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194785,"byte_end":194853,"line_start":499,"line_end":499,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194858,"byte_end":194861,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Note that the initial \":\" or \"$\" or \"@\" or \"?\" used to specify the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194866,"byte_end":194936,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ parameter is included as part of the name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194941,"byte_end":194987,"line_start":502,"line_end":502,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":194992,"byte_end":194995,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195000,"byte_end":195018,"line_start":504,"line_end":504,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195023,"byte_end":195064,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195069,"byte_end":195118,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195123,"byte_end":195200,"line_start":507,"line_end":507,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_index(\":example\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195205,"byte_end":195259,"line_start":508,"line_end":508,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(index, Some(1));","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195264,"byte_end":195299,"line_start":509,"line_end":509,"column_start":5,"column_end":40}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195304,"byte_end":195318,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195323,"byte_end":195328,"line_start":511,"line_end":511,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195333,"byte_end":195340,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195345,"byte_end":195348,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195353,"byte_end":195366,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195371,"byte_end":195374,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Will return Err if `name` is invalid. Will return Ok(None) if the name","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195379,"byte_end":195453,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ is valid but not a bound parameter of this statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195458,"byte_end":195515,"line_start":517,"line_end":517,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195520,"byte_end":195529,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196299,"byte_end":196313,"line_start":541,"line_end":541,"column_start":12,"column_end":26},"name":"parameter_name","qualname":"<Statement>::parameter_name","value":"pub fn parameter_name(&Self, usize) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the SQL parameter name given its (one-based) index (the inverse\n of [`Statement::parameter_index`]).","sig":null,"attributes":[{"value":"/ Return the SQL parameter name given its (one-based) index (the inverse","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195663,"byte_end":195737,"line_start":523,"line_end":523,"column_start":5,"column_end":79}},{"value":"/ of [`Statement::parameter_index`]).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195742,"byte_end":195781,"line_start":524,"line_end":524,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195786,"byte_end":195789,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195794,"byte_end":195812,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195817,"byte_end":195858,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/ fn example(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195863,"byte_end":195912,"line_start":528,"line_end":528,"column_start":5,"column_end":54}},{"value":"/     let stmt = conn.prepare(\"SELECT * FROM test WHERE name = :example\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195917,"byte_end":195994,"line_start":529,"line_end":529,"column_start":5,"column_end":82}},{"value":"/     let index = stmt.parameter_name(1);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":195999,"byte_end":196042,"line_start":530,"line_end":530,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(index, Some(\":example\"));","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196047,"byte_end":196091,"line_start":531,"line_end":531,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196096,"byte_end":196110,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196115,"byte_end":196120,"line_start":533,"line_end":533,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196125,"byte_end":196132,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196137,"byte_end":196140,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196145,"byte_end":196158,"line_start":536,"line_end":536,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196163,"byte_end":196166,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Will return `None` if the column index is out of bounds or if the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196171,"byte_end":196240,"line_start":538,"line_end":538,"column_start":5,"column_end":74}},{"value":"/ parameter is positional.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196245,"byte_end":196273,"line_start":539,"line_end":539,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":196278,"byte_end":196287,"line_start":540,"line_end":540,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197727,"byte_end":197742,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"parameter_count","qualname":"<Statement>::parameter_count","value":"pub fn parameter_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of parameters that can be bound to this statement.\n","sig":null,"attributes":[{"value":"/ Return the number of parameters that can be bound to this statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197629,"byte_end":197701,"line_start":585,"line_end":585,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197706,"byte_end":197715,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199401,"byte_end":199419,"line_start":630,"line_end":630,"column_start":12,"column_end":30},"name":"raw_bind_parameter","qualname":"<Statement>::raw_bind_parameter","value":"pub fn raw_bind_parameter<T: ToSql>(&mut Self, usize, T) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to directly bind a parameter to a given index.","sig":null,"attributes":[{"value":"/ Low level API to directly bind a parameter to a given index.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197813,"byte_end":197877,"line_start":591,"line_end":591,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197882,"byte_end":197885,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the index is one-based, that is, the first parameter index is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197890,"byte_end":197965,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ 1 and not 0. This is consistent with the SQLite API and the values given","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":197970,"byte_end":198046,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ to parameters bound as `?NNN`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198051,"byte_end":198085,"line_start":595,"line_end":595,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198090,"byte_end":198093,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ The valid values for `one_based_col_index` begin at `1`, and end at","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198098,"byte_end":198169,"line_start":597,"line_end":597,"column_start":5,"column_end":76}},{"value":"/ [`Statement::parameter_count`], inclusive.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198174,"byte_end":198220,"line_start":598,"line_end":598,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198225,"byte_end":198228,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198233,"byte_end":198246,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198251,"byte_end":198254,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used, but is available for special cases","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198259,"byte_end":198332,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ such as:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198337,"byte_end":198349,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198354,"byte_end":198357,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ - binding parameters where a gap exists.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198362,"byte_end":198406,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/ - binding named and positional parameters in the same query.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198411,"byte_end":198475,"line_start":606,"line_end":606,"column_start":5,"column_end":69}},{"value":"/ - separating parameter binding from query execution.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198480,"byte_end":198536,"line_start":607,"line_end":607,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198541,"byte_end":198544,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Statements that have had their parameters bound this way should be","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198549,"byte_end":198619,"line_start":609,"line_end":609,"column_start":5,"column_end":75}},{"value":"/ queried or executed by [`Statement::raw_query`] or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198624,"byte_end":198678,"line_start":610,"line_end":610,"column_start":5,"column_end":59}},{"value":"/ [`Statement::raw_execute`]. Other functions are not guaranteed to work.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198683,"byte_end":198758,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198763,"byte_end":198766,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198771,"byte_end":198784,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198789,"byte_end":198792,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198797,"byte_end":198815,"line_start":615,"line_end":615,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198820,"byte_end":198861,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198866,"byte_end":198913,"line_start":617,"line_end":617,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test WHERE name = :name AND value > ?2\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":198918,"byte_end":199011,"line_start":618,"line_end":618,"column_start":5,"column_end":98}},{"value":"/     let name_index = stmt.parameter_index(\":name\")?.expect(\"No such parameter\");","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199016,"byte_end":199100,"line_start":619,"line_end":619,"column_start":5,"column_end":89}},{"value":"/     stmt.raw_bind_parameter(name_index, \"foo\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199105,"byte_end":199157,"line_start":620,"line_end":620,"column_start":5,"column_end":57}},{"value":"/     stmt.raw_bind_parameter(2, 100)?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199162,"byte_end":199203,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/     let mut rows = stmt.raw_query();","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199208,"byte_end":199248,"line_start":622,"line_end":622,"column_start":5,"column_end":45}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199253,"byte_end":199297,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199302,"byte_end":199320,"line_start":624,"line_end":624,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199325,"byte_end":199334,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199339,"byte_end":199353,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199358,"byte_end":199363,"line_start":627,"line_end":627,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199368,"byte_end":199375,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199380,"byte_end":199389,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200330,"byte_end":200341,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"raw_execute","qualname":"<Statement>::raw_execute","value":"pub fn raw_execute(&mut Self) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Low level API to execute a statement given that all parameters were\n bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to execute a statement given that all parameters were","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199714,"byte_end":199785,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199790,"byte_end":199858,"line_start":641,"line_end":641,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199863,"byte_end":199866,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199871,"byte_end":199884,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199889,"byte_end":199892,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199897,"byte_end":199956,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199961,"byte_end":199964,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":199969,"byte_end":200036,"line_start":647,"line_end":647,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::execute`] family should be preferred.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200041,"byte_end":200112,"line_start":648,"line_end":648,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200117,"byte_end":200120,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200125,"byte_end":200138,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200143,"byte_end":200146,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the executed statement returns rows (in which case","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200151,"byte_end":200226,"line_start":652,"line_end":652,"column_start":5,"column_end":80}},{"value":"/ `query` should be used instead), or the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200231,"byte_end":200304,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200309,"byte_end":200318,"line_start":654,"line_end":654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200977,"byte_end":200986,"line_start":672,"line_end":672,"column_start":12,"column_end":21},"name":"raw_query","qualname":"<Statement>::raw_query","value":"pub fn raw_query(&mut Self) -> Rows","parent":null,"children":[],"decl_id":null,"docs":" Low level API to get `Rows` for this query given that all parameters\n were bound explicitly with the [`Statement::raw_bind_parameter`] API.","sig":null,"attributes":[{"value":"/ Low level API to get `Rows` for this query given that all parameters","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200428,"byte_end":200500,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ were bound explicitly with the [`Statement::raw_bind_parameter`] API.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200505,"byte_end":200578,"line_start":660,"line_end":660,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200583,"byte_end":200586,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Caveats","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200591,"byte_end":200604,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200609,"byte_end":200612,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Any unbound parameters will have `NULL` as their value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200617,"byte_end":200676,"line_start":664,"line_end":664,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200681,"byte_end":200684,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This should not generally be used outside of special cases, and","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200689,"byte_end":200756,"line_start":666,"line_end":666,"column_start":5,"column_end":72}},{"value":"/ functions in the [`Statement::query`] family should be preferred.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200761,"byte_end":200830,"line_start":667,"line_end":667,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200835,"byte_end":200838,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Note that if the SQL does not return results, [`Statement::raw_execute`]","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200843,"byte_end":200919,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ should be used instead.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200924,"byte_end":200951,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":200956,"byte_end":200965,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205106,"byte_end":205116,"line_start":787,"line_end":787,"column_start":12,"column_end":22},"name":"get_status","qualname":"<Statement>::get_status","value":"pub fn get_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the value for one of the status counters for this statement.\n","sig":null,"attributes":[{"value":"/ Get the value for one of the status counters for this statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205012,"byte_end":205080,"line_start":785,"line_end":785,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205085,"byte_end":205094,"line_start":786,"line_end":786,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205361,"byte_end":205373,"line_start":794,"line_end":794,"column_start":12,"column_end":24},"name":"reset_status","qualname":"<Statement>::reset_status","value":"pub fn reset_status(&Self, StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Reset the value of one of the status counters for this statement,\n returning the value it had before resetting.\n","sig":null,"attributes":[{"value":"/ Reset the value of one of the status counters for this statement,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205213,"byte_end":205282,"line_start":791,"line_end":791,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205287,"byte_end":205296,"line_start":792,"line_end":792,"column_start":5,"column_end":14}},{"value":"/ returning the value it had before resetting.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":205301,"byte_end":205349,"line_start":793,"line_end":793,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210104,"byte_end":210116,"line_start":938,"line_end":938,"column_start":5,"column_end":17},"name":"FullscanStep","qualname":"::statement::StatementStatus::FullscanStep","value":"StatementStatus::FullscanStep","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210050,"byte_end":210099,"line_start":937,"line_end":937,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210171,"byte_end":210175,"line_start":940,"line_end":940,"column_start":5,"column_end":9},"name":"Sort","qualname":"::statement::StatementStatus::Sort","value":"StatementStatus::Sort","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_SORT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_SORT","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210126,"byte_end":210166,"line_start":939,"line_end":939,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210235,"byte_end":210244,"line_start":942,"line_end":942,"column_start":5,"column_end":14},"name":"AutoIndex","qualname":"::statement::StatementStatus::AutoIndex","value":"StatementStatus::AutoIndex","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_AUTOINDEX","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210185,"byte_end":210230,"line_start":941,"line_end":941,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210302,"byte_end":210308,"line_start":944,"line_end":944,"column_start":5,"column_end":11},"name":"VmStep","qualname":"::statement::StatementStatus::VmStep","value":"StatementStatus::VmStep","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_VM_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_VM_STEP","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210254,"byte_end":210297,"line_start":943,"line_end":943,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2309},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210368,"byte_end":210377,"line_start":946,"line_end":946,"column_start":5,"column_end":14},"name":"RePrepare","qualname":"::statement::StatementStatus::RePrepare","value":"StatementStatus::RePrepare","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_REPREPARE\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_REPREPARE","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210318,"byte_end":210363,"line_start":945,"line_end":945,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210431,"byte_end":210434,"line_start":948,"line_end":948,"column_start":5,"column_end":8},"name":"Run","qualname":"::statement::StatementStatus::Run","value":"StatementStatus::Run","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_RUN\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_RUN","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210387,"byte_end":210426,"line_start":947,"line_end":947,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210496,"byte_end":210506,"line_start":950,"line_end":950,"column_start":5,"column_end":15},"name":"FilterMiss","qualname":"::statement::StatementStatus::FilterMiss","value":"StatementStatus::FilterMiss","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FILTER_MISS\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FILTER_MISS","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210444,"byte_end":210491,"line_start":949,"line_end":949,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210567,"byte_end":210576,"line_start":952,"line_end":952,"column_start":5,"column_end":14},"name":"FilterHit","qualname":"::statement::StatementStatus::FilterHit","value":"StatementStatus::FilterHit","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FILTER_HIT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FILTER_HIT","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210516,"byte_end":210562,"line_start":951,"line_end":951,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2321},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210634,"byte_end":210641,"line_start":954,"line_end":954,"column_start":5,"column_end":12},"name":"MemUsed","qualname":"::statement::StatementStatus::MemUsed","value":"StatementStatus::MemUsed","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_MEMUSED\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_MEMUSED","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210586,"byte_end":210629,"line_start":953,"line_end":953,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2296},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210028,"byte_end":210043,"line_start":936,"line_end":936,"column_start":10,"column_end":25},"name":"StatementStatus","qualname":"::statement::StatementStatus","value":"pub enum StatementStatus {\n    FullscanStep = ,\n    Sort = ,\n    AutoIndex = ,\n    VmStep = ,\n    RePrepare = ,\n    Run = ,\n    FilterMiss = ,\n    FilterHit = ,\n    MemUsed = ,\n}","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321}],"decl_id":null,"docs":" Prepared statement status counters.","sig":null,"attributes":[{"value":"/ Prepared statement status counters.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209717,"byte_end":209756,"line_start":926,"line_end":926,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209757,"byte_end":209760,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ See `https://www.sqlite.org/c3ref/c_stmtstatus_counter.html`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209761,"byte_end":209825,"line_start":928,"line_end":928,"column_start":1,"column_end":65}},{"value":"/ for explanations of each.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209826,"byte_end":209855,"line_start":929,"line_end":929,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209856,"byte_end":209859,"line_start":930,"line_end":930,"column_start":1,"column_end":4}},{"value":"/ Note that depending on your version of SQLite, all of these","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209860,"byte_end":209923,"line_start":931,"line_end":931,"column_start":1,"column_end":64}},{"value":"/ may not be available.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209924,"byte_end":209949,"line_start":932,"line_end":932,"column_start":1,"column_end":26}},{"value":"repr(i32)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":209950,"byte_end":209962,"line_start":933,"line_end":933,"column_start":1,"column_end":13}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":210001,"byte_end":210018,"line_start":935,"line_end":935,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2334},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226737,"byte_end":226745,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":2333},"children":[],"decl_id":null,"docs":" DEFERRED means that the transaction does not actually start until the\n database is first accessed.\n","sig":null,"attributes":[{"value":"/ DEFERRED means that the transaction does not actually start until the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226623,"byte_end":226696,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ database is first accessed.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226701,"byte_end":226732,"line_start":10,"line_end":10,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226881,"byte_end":226890,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":2333},"children":[],"decl_id":null,"docs":" IMMEDIATE cause the database connection to start a new write\n immediately, without waiting for a writes statement.\n","sig":null,"attributes":[{"value":"/ IMMEDIATE cause the database connection to start a new write","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226751,"byte_end":226815,"line_start":12,"line_end":12,"column_start":5,"column_end":69}},{"value":"/ immediately, without waiting for a writes statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226820,"byte_end":226876,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227019,"byte_end":227028,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":2333},"children":[],"decl_id":null,"docs":" EXCLUSIVE prevents other database connections from reading the database\n while the transaction is underway.\n","sig":null,"attributes":[{"value":"/ EXCLUSIVE prevents other database connections from reading the database","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226896,"byte_end":226971,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ while the transaction is underway.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226976,"byte_end":227014,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":2333},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226597,"byte_end":226616,"line_start":8,"line_end":8,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"pub enum TransactionBehavior { Deferred, Immediate, Exclusive, }","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2338}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"/ Options for transaction behavior. See [BEGIN","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226423,"byte_end":226471,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/ TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226472,"byte_end":226546,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":226570,"byte_end":226587,"line_start":7,"line_end":7,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227257,"byte_end":227265,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[{"value":"/ Roll back the changes. This is the default.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227205,"byte_end":227252,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227300,"byte_end":227306,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[{"value":"/ Commit the changes.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227272,"byte_end":227295,"line_start":27,"line_end":27,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227446,"byte_end":227452,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[{"value":"/ Do not commit or roll back changes - this will leave the transaction or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227313,"byte_end":227388,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ savepoint open, so should be used with care.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227393,"byte_end":227441,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227531,"byte_end":227536,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":2343},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[{"value":"/ Panic. Used to enforce intentional behavior during development.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227459,"byte_end":227526,"line_start":34,"line_end":34,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227186,"byte_end":227198,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"pub enum DropBehavior { Rollback, Commit, Ignore, Panic, }","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2350}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"/ Options for how a Transaction or Savepoint should behave when it is dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227033,"byte_end":227113,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227159,"byte_end":227176,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228345,"byte_end":228356,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[{"value":"/ Represents a transaction on a database connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227541,"byte_end":227595,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227596,"byte_end":227599,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227600,"byte_end":227611,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227612,"byte_end":227615,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Transactions will roll back by default. Use `commit` method to explicitly","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227616,"byte_end":227693,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ commit the transaction, or use `set_drop_behavior` to change what happens","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227694,"byte_end":227771,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ when the transaction is dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227772,"byte_end":227808,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227809,"byte_end":227812,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227813,"byte_end":227827,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227828,"byte_end":227831,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227832,"byte_end":227850,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227851,"byte_end":227892,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227893,"byte_end":227964,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":227965,"byte_end":228036,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228037,"byte_end":228098,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228099,"byte_end":228136,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228137,"byte_end":228140,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228141,"byte_end":228209,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228210,"byte_end":228278,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228279,"byte_end":228282,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228283,"byte_end":228302,"line_start":58,"line_end":58,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228303,"byte_end":228308,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228309,"byte_end":228316,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229208,"byte_end":229217,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[{"value":"/ Represents a savepoint on a database connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228431,"byte_end":228483,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228484,"byte_end":228487,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228488,"byte_end":228499,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228500,"byte_end":228503,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Savepoints will roll back by default. Use `commit` method to explicitly","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228504,"byte_end":228579,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ commit the savepoint, or use `set_drop_behavior` to change what happens","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228580,"byte_end":228655,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ when the savepoint is dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228656,"byte_end":228690,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228691,"byte_end":228694,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228695,"byte_end":228709,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228710,"byte_end":228713,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228714,"byte_end":228732,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228733,"byte_end":228774,"line_start":78,"line_end":78,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228775,"byte_end":228846,"line_start":79,"line_end":79,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228847,"byte_end":228918,"line_start":80,"line_end":80,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228919,"byte_end":228980,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":228981,"byte_end":229016,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229017,"byte_end":229020,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229021,"byte_end":229089,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229090,"byte_end":229158,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229159,"byte_end":229162,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     sp.commit()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229163,"byte_end":229182,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229183,"byte_end":229188,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229189,"byte_end":229196,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229743,"byte_end":229746,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction>::new","value":"pub fn new(&mut Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.","sig":null,"attributes":[{"value":"/ Begin a new transaction. Cannot be nested; see `savepoint` for nested","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229374,"byte_end":229447,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ transactions.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229452,"byte_end":229469,"line_start":100,"line_end":100,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229474,"byte_end":229477,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Even though we don't mutate the connection, we take a `&mut Connection`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229482,"byte_end":229557,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ so as to prevent nested transactions on the same connection. For cases","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229562,"byte_end":229636,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ where this is unacceptable, [`Transaction::new_unchecked`] is available.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229641,"byte_end":229717,"line_start":104,"line_end":104,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229722,"byte_end":229731,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230198,"byte_end":230211,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Transaction>::new_unchecked","value":"pub fn new_unchecked(&Connection, TransactionBehavior) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction, failing if a transaction is open.","sig":null,"attributes":[{"value":"/ Begin a new transaction, failing if a transaction is open.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229885,"byte_end":229947,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229952,"byte_end":229955,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If a transaction is already open, this will return an error. Where","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229960,"byte_end":230030,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ possible, [`Transaction::new`] should be preferred, as it provides a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230035,"byte_end":230107,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ compile-time guarantee that transactions are not nested.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230112,"byte_end":230172,"line_start":114,"line_end":114,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230177,"byte_end":230186,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231558,"byte_end":231567,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[{"value":"/ Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230707,"byte_end":230795,"line_start":131,"line_end":131,"column_start":5,"column_end":93}},{"value":"/ transactions.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230800,"byte_end":230817,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230822,"byte_end":230825,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230830,"byte_end":230841,"line_start":134,"line_end":134,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230846,"byte_end":230849,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Just like outer level transactions, savepoint transactions rollback by","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230854,"byte_end":230928,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ default.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230933,"byte_end":230945,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230950,"byte_end":230953,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230958,"byte_end":230972,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230977,"byte_end":230980,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":230985,"byte_end":231003,"line_start":141,"line_end":141,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231008,"byte_end":231049,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ # fn perform_queries_part_1_succeeds(_conn: &Connection) -> bool { true }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231054,"byte_end":231131,"line_start":143,"line_end":143,"column_start":5,"column_end":82}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231136,"byte_end":231197,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/     let mut tx = conn.transaction()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231202,"byte_end":231243,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231248,"byte_end":231251,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231256,"byte_end":231265,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/         let sp = tx.savepoint()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231270,"byte_end":231307,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/         if perform_queries_part_1_succeeds(&sp) {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231312,"byte_end":231365,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/             sp.commit()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231370,"byte_end":231399,"line_start":150,"line_end":150,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231404,"byte_end":231417,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/         // otherwise, sp will rollback","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231422,"byte_end":231464,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231469,"byte_end":231478,"line_start":153,"line_end":153,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231483,"byte_end":231486,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231491,"byte_end":231510,"line_start":155,"line_end":155,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231515,"byte_end":231520,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231525,"byte_end":231532,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231537,"byte_end":231546,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231762,"byte_end":231781,"line_start":165,"line_end":165,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[{"value":"/ Create a new savepoint with a custom savepoint name. See `savepoint()`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231661,"byte_end":231736,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231741,"byte_end":231750,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232049,"byte_end":232062,"line_start":173,"line_end":173,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the transaction when it is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231916,"byte_end":231990,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":231995,"byte_end":232007,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232012,"byte_end":232021,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232026,"byte_end":232037,"line_start":172,"line_end":172,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232241,"byte_end":232258,"line_start":180,"line_end":180,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the transaction to perform the specified action when it is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232126,"byte_end":232198,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232203,"byte_end":232215,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232220,"byte_end":232229,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232448,"byte_end":232454,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a transaction.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232356,"byte_end":232422,"line_start":184,"line_end":184,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232427,"byte_end":232436,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232732,"byte_end":232740,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction>::rollback","value":"pub fn rollback(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and rolls back a transaction.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232637,"byte_end":232706,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232711,"byte_end":232720,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233202,"byte_end":233208,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the transaction, committing or rolling back according to the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":232929,"byte_end":233002,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233007,"byte_end":233049,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233054,"byte_end":233057,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233062,"byte_end":233130,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233135,"byte_end":233176,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233181,"byte_end":233190,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":234746,"byte_end":234749,"line_start":275,"line_end":275,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint>::new","value":"pub fn new(&mut Connection) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint. Can be nested.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":234679,"byte_end":234720,"line_start":273,"line_end":273,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":234725,"byte_end":234734,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":234938,"byte_end":234947,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint>::with_name","value":"pub fn with_name<T: Into<String>>(&mut Connection, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a user-provided savepoint name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":234850,"byte_end":234912,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":234917,"byte_end":234926,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235144,"byte_end":235153,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235089,"byte_end":235118,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235123,"byte_end":235132,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235351,"byte_end":235370,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint with a user-provided savepoint name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235260,"byte_end":235325,"line_start":291,"line_end":291,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235330,"byte_end":235339,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235649,"byte_end":235662,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint>::drop_behavior","value":"pub fn drop_behavior(&Self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the savepoint when it is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235518,"byte_end":235590,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235595,"byte_end":235607,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235612,"byte_end":235621,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235626,"byte_end":235637,"line_start":300,"line_end":300,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235839,"byte_end":235856,"line_start":308,"line_end":308,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint>::set_drop_behavior","value":"pub fn set_drop_behavior(&mut Self, DropBehavior)","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the savepoint to perform the specified action when it is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235726,"byte_end":235796,"line_start":305,"line_end":305,"column_start":5,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235801,"byte_end":235813,"line_start":306,"line_end":306,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235818,"byte_end":235827,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236044,"byte_end":236050,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint>::commit","value":"pub fn commit(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a savepoint.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":235954,"byte_end":236018,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236023,"byte_end":236032,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236542,"byte_end":236550,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint>::rollback","value":"pub fn rollback(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[{"value":"/ A convenience method which rolls back a savepoint.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236289,"byte_end":236343,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236348,"byte_end":236351,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236356,"byte_end":236367,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236372,"byte_end":236375,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Unlike `Transaction`s, savepoints remain active after they have been","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236380,"byte_end":236452,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ rolled back, and can be rolled back again or committed.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236457,"byte_end":236516,"line_start":330,"line_end":330,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236521,"byte_end":236530,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236944,"byte_end":236950,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint>::finish","value":"pub fn finish(Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the savepoint, committing or rolling back according to the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236673,"byte_end":236744,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236749,"byte_end":236791,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236796,"byte_end":236799,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236804,"byte_end":236872,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236877,"byte_end":236918,"line_start":341,"line_end":341,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":236923,"byte_end":236932,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238758,"byte_end":238769,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"pub fn transaction(&mut Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237732,"byte_end":237797,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237802,"byte_end":237805,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The transaction defaults to rolling back when it is dropped. If you","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237810,"byte_end":237881,"line_start":381,"line_end":381,"column_start":5,"column_end":76}},{"value":"/ want the transaction to commit, you must call","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237886,"byte_end":237935,"line_start":382,"line_end":382,"column_start":5,"column_end":54}},{"value":"/ [`commit`](Transaction::commit) or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237940,"byte_end":237978,"line_start":383,"line_end":383,"column_start":5,"column_end":43}},{"value":"/ [`set_drop_behavior(DropBehavior::Commit)`](Transaction::set_drop_behavior).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237983,"byte_end":238063,"line_start":384,"line_end":384,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238068,"byte_end":238071,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238076,"byte_end":238090,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238095,"byte_end":238098,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238103,"byte_end":238121,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238126,"byte_end":238167,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238172,"byte_end":238243,"line_start":390,"line_end":390,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238248,"byte_end":238319,"line_start":391,"line_end":391,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238324,"byte_end":238385,"line_start":392,"line_end":392,"column_start":5,"column_end":66}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238390,"byte_end":238427,"line_start":393,"line_end":393,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238432,"byte_end":238435,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238440,"byte_end":238508,"line_start":395,"line_end":395,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238513,"byte_end":238581,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238586,"byte_end":238589,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238594,"byte_end":238613,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238618,"byte_end":238623,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238628,"byte_end":238635,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238640,"byte_end":238643,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238648,"byte_end":238661,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238666,"byte_end":238669,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238674,"byte_end":238732,"line_start":404,"line_end":404,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238737,"byte_end":238746,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239122,"byte_end":239147,"line_start":418,"line_end":418,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"pub fn transaction_with_behavior(&mut Self, TransactionBehavior)\n-> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[{"value":"/ Begin a new transaction with a specified behavior.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238883,"byte_end":238937,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238942,"byte_end":238945,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ See [`transaction`](Connection::transaction).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":238950,"byte_end":238999,"line_start":412,"line_end":412,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239004,"byte_end":239007,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239012,"byte_end":239025,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239030,"byte_end":239033,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239038,"byte_end":239096,"line_start":416,"line_end":416,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239101,"byte_end":239110,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240606,"byte_end":240627,"line_start":456,"line_end":456,"column_start":12,"column_end":33},"name":"unchecked_transaction","qualname":"<Connection>::unchecked_transaction","value":"pub fn unchecked_transaction(&Self) -> Result<Transaction>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239294,"byte_end":239359,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239364,"byte_end":239367,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Attempt to open a nested transaction will result in a SQLite error.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239372,"byte_end":239443,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ `Connection::transaction` prevents this at compile time by taking `&mut","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239448,"byte_end":239523,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ self`, but `Connection::unchecked_transaction()` may be used to defer","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239528,"byte_end":239601,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ the checking until runtime.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239606,"byte_end":239637,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239642,"byte_end":239645,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::transaction`] and [`Transaction::new_unchecked`]","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239650,"byte_end":239720,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/ (which can be used if the default transaction behavior is undesirable).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239725,"byte_end":239800,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239805,"byte_end":239808,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239813,"byte_end":239827,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239832,"byte_end":239835,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239840,"byte_end":239858,"line_start":437,"line_end":437,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239863,"byte_end":239904,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"/ # use std::rc::Rc;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239909,"byte_end":239931,"line_start":439,"line_end":439,"column_start":5,"column_end":27}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":239936,"byte_end":240007,"line_start":440,"line_end":440,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240012,"byte_end":240083,"line_start":441,"line_end":441,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: Rc<Connection>) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240088,"byte_end":240148,"line_start":442,"line_end":442,"column_start":5,"column_end":65}},{"value":"/     let tx = conn.unchecked_transaction()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240153,"byte_end":240200,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240205,"byte_end":240208,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240213,"byte_end":240281,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240286,"byte_end":240354,"line_start":446,"line_end":446,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240359,"byte_end":240362,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240367,"byte_end":240386,"line_start":448,"line_end":448,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240391,"byte_end":240396,"line_start":449,"line_end":449,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240401,"byte_end":240408,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240413,"byte_end":240416,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240421,"byte_end":240434,"line_start":452,"line_end":452,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240439,"byte_end":240442,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails. The specific","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240447,"byte_end":240518,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/ error returned if transactions are nested is currently unspecified.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240523,"byte_end":240594,"line_start":455,"line_end":455,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241762,"byte_end":241771,"line_start":487,"line_end":487,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"pub fn savepoint(&mut Self) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new savepoint with the default behavior (DEFERRED).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240747,"byte_end":240810,"line_start":460,"line_end":460,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240815,"byte_end":240818,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ The savepoint defaults to rolling back when it is dropped. If you want","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240823,"byte_end":240897,"line_start":462,"line_end":462,"column_start":5,"column_end":79}},{"value":"/ the savepoint to commit, you must call [`commit`](Savepoint::commit) or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240902,"byte_end":240977,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ [`set_drop_behavior(DropBehavior::Commit)`](Savepoint::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":240982,"byte_end":241041,"line_start":464,"line_end":464,"column_start":5,"column_end":64}},{"value":"/ set_drop_behavior).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241046,"byte_end":241069,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241074,"byte_end":241077,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241082,"byte_end":241096,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241101,"byte_end":241104,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241109,"byte_end":241127,"line_start":469,"line_end":469,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241132,"byte_end":241173,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241178,"byte_end":241249,"line_start":471,"line_end":471,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241254,"byte_end":241325,"line_start":472,"line_end":472,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241330,"byte_end":241391,"line_start":473,"line_end":473,"column_start":5,"column_end":66}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241396,"byte_end":241431,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241436,"byte_end":241439,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241444,"byte_end":241512,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241517,"byte_end":241585,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241590,"byte_end":241593,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/     sp.commit()","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241598,"byte_end":241617,"line_start":479,"line_end":479,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241622,"byte_end":241627,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241632,"byte_end":241639,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241644,"byte_end":241647,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241652,"byte_end":241665,"line_start":483,"line_end":483,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241670,"byte_end":241673,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241678,"byte_end":241736,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241741,"byte_end":241750,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":242079,"byte_end":242098,"line_start":499,"line_end":499,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"pub fn savepoint_with_name<T: Into<String>>(&mut Self, T) -> Result<Savepoint>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a specified name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241850,"byte_end":241898,"line_start":491,"line_end":491,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241903,"byte_end":241906,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ See [`savepoint`](Connection::savepoint).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241911,"byte_end":241956,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241961,"byte_end":241964,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241969,"byte_end":241982,"line_start":495,"line_end":495,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241987,"byte_end":241990,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":241995,"byte_end":242053,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":242058,"byte_end":242067,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":964},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":1048},{"krate":0,"index":1115},{"krate":0,"index":1145},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":1191}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[{"value":"/ Traits dealing with SQLite data types.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":248794,"byte_end":248836,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":248837,"byte_end":248840,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ SQLite uses a [dynamic type system](https://www.sqlite.org/datatype3.html). Implementations of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":248841,"byte_end":248939,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ the [`ToSql`] and [`FromSql`] traits are provided for the basic types that","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":248940,"byte_end":249018,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ SQLite provides methods for:","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249019,"byte_end":249051,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249052,"byte_end":249055,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Strings (`String` and `&str`)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249056,"byte_end":249091,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/ * Blobs (`Vec<u8>` and `&[u8]`)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249092,"byte_end":249127,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/ * Numbers","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249128,"byte_end":249141,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249142,"byte_end":249145,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The number situation is a little complicated due to the fact that all","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249146,"byte_end":249219,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ numbers in SQLite are stored as `INTEGER` (`i64`) or `REAL` (`f64`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249220,"byte_end":249292,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249293,"byte_end":249296,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ToSql`] and [`FromSql`] are implemented for all primitive number types.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249297,"byte_end":249374,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ [`FromSql`] has different behaviour depending on the SQL and Rust types, and","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249375,"byte_end":249455,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ the value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249456,"byte_end":249470,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249471,"byte_end":249474,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `INTEGER` to integer: returns an","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249475,"byte_end":249513,"line_start":18,"line_end":18,"column_start":1,"column_end":39}},{"value":"/   [`Error::IntegralValueOutOfRange`](crate::Error::IntegralValueOutOfRange)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249514,"byte_end":249593,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/   error if the value does not fit in the Rust type.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249594,"byte_end":249649,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/ * `REAL` to integer: always returns an","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249650,"byte_end":249692,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/   [`Error::InvalidColumnType`](crate::Error::InvalidColumnType) error.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249693,"byte_end":249767,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ * `INTEGER` to float: casts using `as` operator. Never fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249768,"byte_end":249833,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/ * `REAL` to float: casts using `as` operator. Never fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249834,"byte_end":249896,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249897,"byte_end":249900,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`ToSql`] always succeeds except when storing a `u64` or `usize` value that","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249901,"byte_end":249980,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ cannot fit in an `INTEGER` (`i64`). Also note that SQLite ignores column","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":249981,"byte_end":250057,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ types, so if you store an `i64` in a column with type `REAL` it will be","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250058,"byte_end":250133,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ stored as an `INTEGER`, not a `REAL`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250134,"byte_end":250175,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250176,"byte_end":250179,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the `time` feature is enabled, implementations are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250180,"byte_end":250237,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/ provided for `time::OffsetDateTime` that use the RFC 3339 date/time format,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250238,"byte_end":250317,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ `\"%Y-%m-%dT%H:%M:%S.%fZ\"`, to store time values as strings.  These values","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250318,"byte_end":250395,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ can be parsed by SQLite's builtin","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250396,"byte_end":250433,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ [datetime](https://www.sqlite.org/lang_datefunc.html) functions.  If you","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250434,"byte_end":250510,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ want different storage for datetimes, you can use a newtype.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":250511,"byte_end":250575,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`ToSql`] and [`FromSql`] are also implemented for `Option<T>` where `T`","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251363,"byte_end":251439,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ implements [`ToSql`] or [`FromSql`] for the cases where you want to know if","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251440,"byte_end":251519,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ a value was NULL (which gets translated to `None`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":251520,"byte_end":251575,"line_start":70,"line_end":70,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265237,"byte_end":265248,"line_start":12,"line_end":12,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when an SQLite value is requested, but the type of the result","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265105,"byte_end":265176,"line_start":10,"line_end":10,"column_start":5,"column_end":76}},{"value":"/ cannot be converted to the requested Rust type.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265181,"byte_end":265232,"line_start":11,"line_end":11,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2373},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265357,"byte_end":265367,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[{"value":"/ Error when the i64 value returned by SQLite cannot be stored into the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265255,"byte_end":265328,"line_start":14,"line_end":14,"column_start":5,"column_end":78}},{"value":"/ requested type.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265333,"byte_end":265352,"line_start":15,"line_end":15,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":2376},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265506,"byte_end":265521,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"InvalidBlobSize","qualname":"::types::from_sql::FromSqlError::InvalidBlobSize","value":"FromSqlError::InvalidBlobSize { expected_size, blob_size }","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":" Error when the blob result returned by SQLite cannot be stored into the\n requested type due to a size mismatch.\n","sig":null,"attributes":[{"value":"/ Error when the blob result returned by SQLite cannot be stored into the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265379,"byte_end":265454,"line_start":18,"line_end":18,"column_start":5,"column_end":80}},{"value":"/ requested type due to a size mismatch.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265459,"byte_end":265501,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2379},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265769,"byte_end":265774,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":2370},"children":[],"decl_id":null,"docs":" An error case available for implementors of the [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ An error case available for implementors of the [`FromSql`] trait.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265694,"byte_end":265764,"line_start":27,"line_end":27,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265086,"byte_end":265098,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"pub enum FromSqlError {\n    InvalidType,\n    OutOfRange(i64),\n    InvalidBlobSize {\n        expected_size: usize,\n        blob_size: usize,\n    },\n    Other(Box<dyn Error + Send + Sync + 'static>),\n}","parent":null,"children":[{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2376},{"krate":0,"index":2379}],"decl_id":null,"docs":" Enum listing possible errors from [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from [`FromSql`] trait.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":264985,"byte_end":265041,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265059,"byte_end":265076,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267430,"byte_end":267443,"line_start":82,"line_end":82,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the [`FromSql`] trait.\n","sig":null,"attributes":[{"value":"/ Result type for implementors of the [`FromSql`] trait.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267362,"byte_end":267420,"line_start":81,"line_end":81,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267548,"byte_end":267555,"line_start":85,"line_end":85,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":1017}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be created from a SQLite value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267475,"byte_end":267537,"line_start":84,"line_end":84,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267619,"byte_end":267632,"line_start":87,"line_end":87,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"pub fn column_result(ValueRef) -> FromSqlResult<Self>","parent":{"krate":0,"index":1016},"children":[],"decl_id":null,"docs":" Converts SQLite value into Rust value.\n","sig":null,"attributes":[{"value":"/ Converts SQLite value into Rust value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267569,"byte_end":267611,"line_start":86,"line_end":86,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273303,"byte_end":273311,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ A borrowed SQLite-representable value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273256,"byte_end":273298,"line_start":13,"line_end":13,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273377,"byte_end":273382,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":2411},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ An owned SQLite-representable value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273332,"byte_end":273372,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273234,"byte_end":273245,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"pub enum ToSqlOutput<'a> { Borrowed(ValueRef), Owned(Value), }","parent":null,"children":[{"krate":0,"index":2413},{"krate":0,"index":2416}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementers of the\n [`ToSql`] trait.\n","sig":null,"attributes":[{"value":"/ `ToSqlOutput` represents the possible output types for implementers of the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273072,"byte_end":273150,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ [`ToSql`] trait.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273151,"byte_end":273171,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273207,"byte_end":273224,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275792,"byte_end":275797,"line_start":99,"line_end":99,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":1080}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values. Returns\n [`Error::ToSqlConversionFailure`] if the conversion fails.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into SQLite values. Returns","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275647,"byte_end":275718,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ [`Error::ToSqlConversionFailure`] if the conversion fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275719,"byte_end":275781,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275851,"byte_end":275857,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"pub fn to_sql(&Self) -> Result<ToSqlOutput>","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":" Converts Rust value to SQLite value\n","sig":null,"attributes":[{"value":"/ Converts Rust value to SQLite value","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275804,"byte_end":275843,"line_start":100,"line_end":100,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284552,"byte_end":284556,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284515,"byte_end":284547,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284601,"byte_end":284608,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284562,"byte_end":284596,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284665,"byte_end":284669,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284619,"byte_end":284660,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284716,"byte_end":284720,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284680,"byte_end":284711,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284770,"byte_end":284774,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284734,"byte_end":284765,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284503,"byte_end":284508,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"pub enum Value { Null, Integer(i64), Real(f64), Text(String), Blob(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2495},{"krate":0,"index":2498},{"krate":0,"index":2501}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[{"value":"/ Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284232,"byte_end":284324,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ dictated by SQLite (not by the caller).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284325,"byte_end":284368,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284369,"byte_end":284372,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`ValueRef`](crate::types::ValueRef) for a non-owning dynamic type","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284373,"byte_end":284447,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284448,"byte_end":284458,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286886,"byte_end":286895,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286804,"byte_end":286844,"line_start":130,"line_end":130,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286849,"byte_end":286858,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286863,"byte_end":286874,"line_start":132,"line_end":132,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287549,"byte_end":287553,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287512,"byte_end":287544,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287598,"byte_end":287605,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287559,"byte_end":287593,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287662,"byte_end":287666,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287616,"byte_end":287657,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287713,"byte_end":287717,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a [u8])","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287677,"byte_end":287708,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287769,"byte_end":287773,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287733,"byte_end":287764,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287493,"byte_end":287501,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"pub enum ValueRef<'a> {\n    Null,\n    Integer(i64),\n    Real(f64),\n    Text(&'a [u8]),\n    Blob(&'a [u8]),\n}","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":2534},{"krate":0,"index":2537}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"/ A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287243,"byte_end":287329,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ memory backing this value is owned by SQLite.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287330,"byte_end":287379,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287380,"byte_end":287383,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`Value`](Value) for an owning dynamic type value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287384,"byte_end":287442,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287894,"byte_end":287903,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef>::data_type","value":"pub fn data_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":" Returns SQLite fundamental datatype.\n","sig":null,"attributes":[{"value":"/ Returns SQLite fundamental datatype.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287812,"byte_end":287852,"line_start":23,"line_end":23,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287857,"byte_end":287866,"line_start":24,"line_end":24,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287871,"byte_end":287882,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288408,"byte_end":288414,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef>::as_i64","value":"pub fn as_i64(&Self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Integer`, returns the integral value. Otherwise,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288218,"byte_end":288289,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288294,"byte_end":288354,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288359,"byte_end":288382,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288387,"byte_end":288396,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288817,"byte_end":288831,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"as_i64_or_null","qualname":"<ValueRef>::as_i64_or_null","value":"pub fn as_i64_or_null(&Self) -> FromSqlResult<Option<i64>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Integer`, returns the integral value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288581,"byte_end":288623,"line_start":49,"line_end":49,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Integer`, returns the integral value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288628,"byte_end":288688,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288693,"byte_end":288763,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288768,"byte_end":288791,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288796,"byte_end":288805,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289245,"byte_end":289251,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef>::as_f64","value":"pub fn as_f64(&Self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Real`, returns the floating point value. Otherwise,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289052,"byte_end":289126,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289131,"byte_end":289191,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289196,"byte_end":289219,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289224,"byte_end":289233,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289654,"byte_end":289668,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"as_f64_or_null","qualname":"<ValueRef>::as_f64_or_null","value":"pub fn as_f64_or_null(&Self) -> FromSqlResult<Option<f64>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Real`, returns the floating point value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289415,"byte_end":289457,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Real`, returns the floating point value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289462,"byte_end":289525,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289530,"byte_end":289600,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289605,"byte_end":289628,"line_start":76,"line_end":76,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289633,"byte_end":289642,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290062,"byte_end":290068,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef>::as_str","value":"pub fn as_str(&Self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Text`, returns the string value. Otherwise, returns","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289886,"byte_end":289960,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":289965,"byte_end":290036,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290041,"byte_end":290050,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290561,"byte_end":290575,"line_start":103,"line_end":103,"column_start":12,"column_end":26},"name":"as_str_or_null","qualname":"<ValueRef>::as_str_or_null","value":"pub fn as_str_or_null(&Self) -> FromSqlResult<Option<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Text`, returns the string value.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290330,"byte_end":290372,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Text`, returns the string value.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290377,"byte_end":290432,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290437,"byte_end":290507,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290512,"byte_end":290535,"line_start":101,"line_end":101,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290540,"byte_end":290549,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291072,"byte_end":291079,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef>::as_blob","value":"pub fn as_blob(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Blob`, returns the byte slice. Otherwise, returns","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290898,"byte_end":290970,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/ [`Err(Error::InvalidColumnType)`](crate::Error::InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":290975,"byte_end":291046,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291051,"byte_end":291060,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291477,"byte_end":291492,"line_start":128,"line_end":128,"column_start":12,"column_end":27},"name":"as_blob_or_null","qualname":"<ValueRef>::as_blob_or_null","value":"pub fn as_blob_or_null(&Self) -> FromSqlResult<Option<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is case `Blob`, returns the byte slice.\n Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::\n InvalidColumnType).\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291248,"byte_end":291290,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ If `self` is case `Blob`, returns the byte slice.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291295,"byte_end":291348,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/ Otherwise returns [`Err(Error::InvalidColumnType)`](crate::Error::","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291353,"byte_end":291423,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ InvalidColumnType).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291428,"byte_end":291451,"line_start":126,"line_end":126,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291456,"byte_end":291465,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291860,"byte_end":291868,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ValueRef>::as_bytes","value":"pub fn as_bytes(&Self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte slice that makes up this ValueRef if it's either\n [`ValueRef::Blob`] or [`ValueRef::Text`].\n","sig":null,"attributes":[{"value":"/ Returns the byte slice that makes up this ValueRef if it's either","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291715,"byte_end":291784,"line_start":136,"line_end":136,"column_start":5,"column_end":74}},{"value":"/ [`ValueRef::Blob`] or [`ValueRef::Text`].","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291789,"byte_end":291834,"line_start":137,"line_end":137,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":291839,"byte_end":291848,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292242,"byte_end":292258,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"as_bytes_or_null","qualname":"<ValueRef>::as_bytes_or_null","value":"pub fn as_bytes_or_null(&Self) -> FromSqlResult<Option<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Null` returns None.\n If `self` is [`ValueRef::Blob`] or [`ValueRef::Text`] returns the byte\n slice that makes up this value\n","sig":null,"attributes":[{"value":"/ If `self` is case `Null` returns None.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292056,"byte_end":292098,"line_start":146,"line_end":146,"column_start":5,"column_end":47}},{"value":"/ If `self` is [`ValueRef::Blob`] or [`ValueRef::Text`] returns the byte","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292103,"byte_end":292177,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ slice that makes up this value","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292182,"byte_end":292216,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292221,"byte_end":292230,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252541,"byte_end":252545,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"/ Empty struct that can be used to fill in a query parameter as `NULL`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252170,"byte_end":252243,"line_start":96,"line_end":96,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252244,"byte_end":252247,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252248,"byte_end":252262,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252263,"byte_end":252266,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252267,"byte_end":252285,"line_start":100,"line_end":100,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252286,"byte_end":252327,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ # use rusqlite::types::{Null};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252328,"byte_end":252362,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252363,"byte_end":252366,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ fn insert_null(conn: &Connection) -> Result<usize> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252367,"byte_end":252423,"line_start":104,"line_end":104,"column_start":1,"column_end":57}},{"value":"/     conn.execute(\"INSERT INTO people (name) VALUES (?)\", [Null])","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252424,"byte_end":252492,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252493,"byte_end":252498,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252499,"byte_end":252506,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252710,"byte_end":252714,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" NULL\n","sig":null,"attributes":[{"value":"/ NULL","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252697,"byte_end":252705,"line_start":115,"line_end":115,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252750,"byte_end":252757,"line_start":118,"line_end":118,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" 64-bit signed integer\n","sig":null,"attributes":[{"value":"/ 64-bit signed integer","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252720,"byte_end":252745,"line_start":117,"line_end":117,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2564},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252805,"byte_end":252809,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" 64-bit IEEE floating point number\n","sig":null,"attributes":[{"value":"/ 64-bit IEEE floating point number","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252763,"byte_end":252800,"line_start":119,"line_end":119,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252830,"byte_end":252834,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" String\n","sig":null,"attributes":[{"value":"/ String","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252815,"byte_end":252825,"line_start":121,"line_end":121,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252853,"byte_end":252857,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":2559},"children":[],"decl_id":null,"docs":" BLOB\n","sig":null,"attributes":[{"value":"/ BLOB","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252840,"byte_end":252848,"line_start":123,"line_end":123,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252686,"byte_end":252690,"line_start":114,"line_end":114,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"pub enum Type { Null, Integer, Real, Text, Blob, }","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568}],"decl_id":null,"docs":" SQLite data types.\n See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).\n","sig":null,"attributes":[{"value":"/ SQLite data types.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252548,"byte_end":252570,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"/ See [Fundamental Datatypes](https://sqlite.org/c3ref/c_blob.html).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252571,"byte_end":252641,"line_start":112,"line_end":112,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296074,"byte_end":296088,"line_start":10,"line_end":10,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"pub fn version_number() -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as an integer; e.g., `3016002` for version","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":295868,"byte_end":295941,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ 3.16.2.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":295942,"byte_end":295953,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":295954,"byte_end":295957,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion_number()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":295958,"byte_end":296044,"line_start":7,"line_end":7,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296045,"byte_end":296054,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296055,"byte_end":296066,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296345,"byte_end":296352,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"pub fn version() -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296151,"byte_end":296231,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296232,"byte_end":296235,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296236,"byte_end":296315,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296316,"byte_end":296325,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"must_use","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\version.rs","byte_start":296326,"byte_end":296337,"line_start":18,"line_end":18,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4196,"byte_end":4205,"line_start":146,"line_end":146,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&dyn ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter][sqlite-varparam].","sig":null,"attributes":[{"value":"/ To be used when your statement has no [parameter][sqlite-varparam].","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3881,"byte_end":3952,"line_start":140,"line_end":140,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3953,"byte_end":3956,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [sqlite-varparam]: https://sqlite.org/lang_expr.html#varparam","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3957,"byte_end":4022,"line_start":142,"line_end":142,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4023,"byte_end":4026,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is deprecated in favor of using an empty array literal.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4027,"byte_end":4091,"line_start":144,"line_end":144,"column_start":1,"column_end":65}},{"value":"deprecated =\n  \"Use an empty array instead; `stmt.execute(NO_PARAMS)` => `stmt.execute([])`\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":4092,"byte_end":4185,"line_start":145,"line_end":145,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1270},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6225,"byte_end":6231,"line_start":221,"line_end":221,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[{"value":"/ A typedef of the result returned by many methods.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6162,"byte_end":6215,"line_start":220,"line_end":220,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6337,"byte_end":6354,"line_start":224,"line_end":224,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":1275}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[{"value":"/ See the [method documentation](#tymethod.optional).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6271,"byte_end":6326,"line_start":223,"line_end":223,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6645,"byte_end":6653,"line_start":230,"line_end":230,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"pub fn optional(Self) -> Result<Option<T>>","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[{"value":"/ Converts a `Result<T>` into a `Result<Option<T>>`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6364,"byte_end":6418,"line_start":225,"line_end":225,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6423,"byte_end":6426,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ By default, Rusqlite treats 0 rows being returned from a query that is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6431,"byte_end":6505,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ expected to return 1 row as an error. This method will","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6510,"byte_end":6568,"line_start":228,"line_end":228,"column_start":5,"column_end":63}},{"value":"/ handle that error, and give you back an `Option<T>` instead.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6573,"byte_end":6637,"line_start":229,"line_end":229,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8723,"byte_end":8727,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[{"value":"/ The main database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8696,"byte_end":8718,"line_start":297,"line_end":297,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8810,"byte_end":8814,"line_start":301,"line_end":301,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[{"value":"/ The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8734,"byte_end":8805,"line_start":300,"line_end":300,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8890,"byte_end":8898,"line_start":304,"line_end":304,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":2604},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[{"value":"/ A database that has been attached via \"ATTACH DATABASE ...\".","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8821,"byte_end":8885,"line_start":303,"line_end":303,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8673,"byte_end":8685,"line_start":296,"line_end":296,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"pub enum DatabaseName<'a> { Main, Temp, Attached(&'a str), }","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"/ Name for a database within a SQLite connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8582,"byte_end":8633,"line_start":294,"line_end":294,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8964,"byte_end":8971,"line_start":308,"line_end":308,"column_start":11,"column_end":18},"name":"MAIN_DB","qualname":"::MAIN_DB","value":"DatabaseName","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for [`DatabaseName::Main`].\n","sig":null,"attributes":[{"value":"/ Shorthand for [`DatabaseName::Main`].","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":8912,"byte_end":8953,"line_start":307,"line_end":307,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9070,"byte_end":9077,"line_start":311,"line_end":311,"column_start":11,"column_end":18},"name":"TEMP_DB","qualname":"::TEMP_DB","value":"DatabaseName","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for [`DatabaseName::Temp`].\n","sig":null,"attributes":[{"value":"/ Shorthand for [`DatabaseName::Temp`].","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9018,"byte_end":9059,"line_start":310,"line_end":310,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9744,"byte_end":9754,"line_start":334,"line_end":334,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[{"value":"/ A connection to a SQLite database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9694,"byte_end":9732,"line_start":333,"line_end":333,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10746,"byte_end":10750,"line_start":372,"line_end":372,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"pub fn open<P: AsRef<Path>>(P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10028,"byte_end":10075,"line_start":350,"line_end":350,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10080,"byte_end":10083,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ `Connection::open(path)` is equivalent to","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10088,"byte_end":10133,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ `Connection::open_with_flags(path,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10138,"byte_end":10176,"line_start":353,"line_end":353,"column_start":5,"column_end":43}},{"value":"/ OpenFlags::SQLITE_OPEN_READ_WRITE |","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10181,"byte_end":10220,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/ OpenFlags::SQLITE_OPEN_CREATE)`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10225,"byte_end":10261,"line_start":355,"line_end":355,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10266,"byte_end":10269,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10274,"byte_end":10292,"line_start":357,"line_end":357,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10297,"byte_end":10338,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ fn open_my_db() -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10343,"byte_end":10378,"line_start":359,"line_end":359,"column_start":5,"column_end":40}},{"value":"/     let path = \"./my_db.db3\";","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10383,"byte_end":10416,"line_start":360,"line_end":360,"column_start":5,"column_end":38}},{"value":"/     let db = Connection::open(&path)?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10421,"byte_end":10463,"line_start":361,"line_end":361,"column_start":5,"column_end":47}},{"value":"/     println!(\"{}\", db.is_autocommit());","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10468,"byte_end":10511,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10516,"byte_end":10530,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10535,"byte_end":10540,"line_start":364,"line_end":364,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10545,"byte_end":10552,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10557,"byte_end":10560,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10565,"byte_end":10578,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10583,"byte_end":10586,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10591,"byte_end":10660,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10665,"byte_end":10720,"line_start":370,"line_end":370,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10725,"byte_end":10734,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11088,"byte_end":11102,"line_start":383,"line_end":383,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"pub fn open_in_memory() -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10902,"byte_end":10960,"line_start":377,"line_end":377,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10965,"byte_end":10968,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10973,"byte_end":10986,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10991,"byte_end":10994,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10999,"byte_end":11062,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11067,"byte_end":11076,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11607,"byte_end":11622,"line_start":398,"line_end":398,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"pub fn open_with_flags<P: AsRef<Path>>(P, OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11235,"byte_end":11282,"line_start":388,"line_end":388,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11287,"byte_end":11290,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11295,"byte_end":11386,"line_start":390,"line_end":390,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11391,"byte_end":11413,"line_start":391,"line_end":391,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11418,"byte_end":11421,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11426,"byte_end":11439,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11444,"byte_end":11447,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11452,"byte_end":11521,"line_start":395,"line_end":395,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11526,"byte_end":11581,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":11586,"byte_end":11595,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12456,"byte_end":12479,"line_start":418,"line_end":418,"column_start":12,"column_end":35},"name":"open_with_flags_and_vfs","qualname":"<Connection>::open_with_flags_and_vfs","value":"pub fn open_with_flags_and_vfs<P: AsRef<Path>>(P, OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database using the specific flags and\n vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database using the specific flags and","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12022,"byte_end":12097,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ vfs name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12102,"byte_end":12115,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12120,"byte_end":12123,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12128,"byte_end":12219,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12224,"byte_end":12246,"line_start":411,"line_end":411,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12251,"byte_end":12254,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12259,"byte_end":12272,"line_start":413,"line_end":413,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12277,"byte_end":12280,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if either `path` or `vfs` cannot be converted to a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12285,"byte_end":12357,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/ C-compatible string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12362,"byte_end":12430,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12435,"byte_end":12444,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13288,"byte_end":13313,"line_start":441,"line_end":441,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"pub fn open_in_memory_with_flags(OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":12971,"byte_end":13029,"line_start":432,"line_end":432,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13034,"byte_end":13037,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13042,"byte_end":13133,"line_start":434,"line_end":434,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13138,"byte_end":13160,"line_start":435,"line_end":435,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13165,"byte_end":13168,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13173,"byte_end":13186,"line_start":437,"line_end":437,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13191,"byte_end":13194,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13199,"byte_end":13262,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13267,"byte_end":13276,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13850,"byte_end":13883,"line_start":456,"line_end":456,"column_start":12,"column_end":45},"name":"open_in_memory_with_flags_and_vfs","qualname":"<Connection>::open_in_memory_with_flags_and_vfs","value":"pub fn open_in_memory_with_flags_and_vfs(OpenFlags, &str)\n-> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database using the specific\n flags and vfs name.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database using the specific","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13422,"byte_end":13498,"line_start":445,"line_end":445,"column_start":5,"column_end":81}},{"value":"/ flags and vfs name.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13503,"byte_end":13526,"line_start":446,"line_end":446,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13531,"byte_end":13534,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13539,"byte_end":13630,"line_start":448,"line_end":448,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13635,"byte_end":13657,"line_start":449,"line_end":449,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13662,"byte_end":13665,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13670,"byte_end":13683,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13688,"byte_end":13691,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `vfs` cannot be converted to a C-compatible","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13696,"byte_end":13764,"line_start":453,"line_end":453,"column_start":5,"column_end":73}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13769,"byte_end":13824,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":13829,"byte_end":13838,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14658,"byte_end":14671,"line_start":481,"line_end":481,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"pub fn execute_batch(&Self, &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[{"value":"/ Convenience method to run multiple SQL statements (that cannot take any","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14016,"byte_end":14091,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ parameters).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14096,"byte_end":14112,"line_start":461,"line_end":461,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14117,"byte_end":14120,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14125,"byte_end":14139,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14144,"byte_end":14147,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14152,"byte_end":14170,"line_start":465,"line_end":465,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14175,"byte_end":14216,"line_start":466,"line_end":466,"column_start":5,"column_end":46}},{"value":"/ fn create_tables(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14221,"byte_end":14276,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/     conn.execute_batch(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14281,"byte_end":14308,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/         \"BEGIN;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14313,"byte_end":14332,"line_start":469,"line_end":469,"column_start":5,"column_end":24}},{"value":"/          CREATE TABLE foo(x INTEGER);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14337,"byte_end":14378,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/          CREATE TABLE bar(y TEXT);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14383,"byte_end":14421,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/          COMMIT;\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14426,"byte_end":14448,"line_start":472,"line_end":472,"column_start":5,"column_end":27}},{"value":"/     )","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14453,"byte_end":14462,"line_start":473,"line_end":473,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14467,"byte_end":14472,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14477,"byte_end":14484,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14489,"byte_end":14492,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14497,"byte_end":14510,"line_start":477,"line_end":477,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14515,"byte_end":14518,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14523,"byte_end":14598,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":14603,"byte_end":14646,"line_start":480,"line_end":480,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16882,"byte_end":16889,"line_start":549,"line_end":549,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"pub fn execute<P: Params>(&Self, &str, P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15209,"byte_end":15278,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15283,"byte_end":15286,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15291,"byte_end":15366,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15371,"byte_end":15407,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15412,"byte_end":15415,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15420,"byte_end":15434,"line_start":503,"line_end":503,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15439,"byte_end":15442,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ### With positional params","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15447,"byte_end":15477,"line_start":505,"line_end":505,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15482,"byte_end":15485,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15490,"byte_end":15508,"line_start":507,"line_end":507,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15513,"byte_end":15546,"line_start":508,"line_end":508,"column_start":5,"column_end":38}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15551,"byte_end":15590,"line_start":509,"line_end":509,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\", [1i32]) {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15595,"byte_end":15675,"line_start":510,"line_end":510,"column_start":5,"column_end":85}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15680,"byte_end":15749,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15754,"byte_end":15813,"line_start":512,"line_end":512,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15818,"byte_end":15827,"line_start":513,"line_end":513,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15832,"byte_end":15837,"line_start":514,"line_end":514,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15842,"byte_end":15849,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15854,"byte_end":15857,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ### With positional params of varying types","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15862,"byte_end":15909,"line_start":517,"line_end":517,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15914,"byte_end":15917,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15922,"byte_end":15940,"line_start":519,"line_end":519,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{params, Connection};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15945,"byte_end":15986,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":15991,"byte_end":16030,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16035,"byte_end":16062,"line_start":522,"line_end":522,"column_start":5,"column_end":32}},{"value":"/         \"UPDATE foo SET bar = 'baz' WHERE qux = ?1 AND quux = ?2\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16067,"byte_end":16137,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/         params![1i32, 1.5f64],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16142,"byte_end":16176,"line_start":524,"line_end":524,"column_start":5,"column_end":39}},{"value":"/     ) {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16181,"byte_end":16192,"line_start":525,"line_end":525,"column_start":5,"column_end":16}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16197,"byte_end":16266,"line_start":526,"line_end":526,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16271,"byte_end":16330,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16335,"byte_end":16344,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16349,"byte_end":16354,"line_start":529,"line_end":529,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16359,"byte_end":16366,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16371,"byte_end":16374,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ### With named params","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16379,"byte_end":16404,"line_start":532,"line_end":532,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16409,"byte_end":16412,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16417,"byte_end":16435,"line_start":534,"line_end":534,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16440,"byte_end":16481,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16486,"byte_end":16537,"line_start":536,"line_end":536,"column_start":5,"column_end":56}},{"value":"/     conn.execute(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16542,"byte_end":16563,"line_start":537,"line_end":537,"column_start":5,"column_end":26}},{"value":"/         \"INSERT INTO test (name) VALUES (:name)\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16568,"byte_end":16621,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"/         &[(\":name\", \"one\")],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16626,"byte_end":16658,"line_start":539,"line_end":539,"column_start":5,"column_end":37}},{"value":"/     )","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16663,"byte_end":16672,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16677,"byte_end":16682,"line_start":541,"line_end":541,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16687,"byte_end":16694,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16699,"byte_end":16702,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16707,"byte_end":16720,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16725,"byte_end":16728,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16733,"byte_end":16808,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16813,"byte_end":16856,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":16861,"byte_end":16870,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17333,"byte_end":17337,"line_start":560,"line_end":560,"column_start":12,"column_end":16},"name":"path","qualname":"<Connection>::path","value":"pub fn path(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the database file, if one exists and is known.","sig":null,"attributes":[{"value":"/ Returns the path to the database file, if one exists and is known.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17076,"byte_end":17146,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17151,"byte_end":17154,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Note that in some cases [PRAGMA","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17159,"byte_end":17194,"line_start":556,"line_end":556,"column_start":5,"column_end":40}},{"value":"/ database_list](https://sqlite.org/pragma.html#pragma_database_list) is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17199,"byte_end":17273,"line_start":557,"line_end":557,"column_start":5,"column_end":79}},{"value":"/ likely to be more robust.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17278,"byte_end":17307,"line_start":558,"line_end":558,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17312,"byte_end":17321,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17875,"byte_end":17888,"line_start":575,"line_end":575,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"pub fn execute_named(&Self, &str, &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement with","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17404,"byte_end":17477,"line_start":564,"line_end":564,"column_start":5,"column_end":78}},{"value":"/ named parameter(s).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17482,"byte_end":17505,"line_start":565,"line_end":565,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17510,"byte_end":17513,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17518,"byte_end":17593,"line_start":567,"line_end":567,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17598,"byte_end":17634,"line_start":568,"line_end":568,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17639,"byte_end":17642,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17647,"byte_end":17660,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17665,"byte_end":17668,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17673,"byte_end":17748,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17753,"byte_end":17796,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `execute` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":17801,"byte_end":17863,"line_start":574,"line_end":574,"column_start":5,"column_end":67}},{"value":"allow(deprecated)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18025,"byte_end":18046,"line_start":577,"line_end":577,"column_start":9,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18422,"byte_end":18439,"line_start":589,"line_end":589,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"pub fn last_insert_rowid(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[{"value":"/ Get the SQLite rowid of the most recent successful INSERT.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18208,"byte_end":18270,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18275,"byte_end":18278,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_last_insert_rowid](https://www.sqlite.org/c3ref/last_insert_rowid.html) under","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18283,"byte_end":18378,"line_start":586,"line_end":586,"column_start":5,"column_end":100}},{"value":"/ the hood.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18383,"byte_end":18396,"line_start":587,"line_end":587,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18401,"byte_end":18410,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19461,"byte_end":19470,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"pub fn query_row<T, P, F>(&Self, &str, P, F) -> Result<T> where P: Params,\nF: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18516,"byte_end":18586,"line_start":593,"line_end":593,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18591,"byte_end":18606,"line_start":594,"line_end":594,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18611,"byte_end":18614,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18619,"byte_end":18633,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18638,"byte_end":18641,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18646,"byte_end":18664,"line_start":598,"line_end":598,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result, Connection};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18669,"byte_end":18710,"line_start":599,"line_end":599,"column_start":5,"column_end":46}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18715,"byte_end":18777,"line_start":600,"line_end":600,"column_start":5,"column_end":67}},{"value":"/     conn.query_row(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18782,"byte_end":18805,"line_start":601,"line_end":601,"column_start":5,"column_end":28}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18810,"byte_end":18874,"line_start":602,"line_end":602,"column_start":5,"column_end":69}},{"value":"/         [],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18879,"byte_end":18894,"line_start":603,"line_end":603,"column_start":5,"column_end":20}},{"value":"/         |row| row.get(0),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18899,"byte_end":18928,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18933,"byte_end":18942,"line_start":605,"line_end":605,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18947,"byte_end":18952,"line_start":606,"line_end":606,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18957,"byte_end":18964,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18969,"byte_end":18972,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":18977,"byte_end":19050,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19055,"byte_end":19067,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19072,"byte_end":19075,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19080,"byte_end":19153,"line_start":612,"line_end":612,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19158,"byte_end":19230,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19235,"byte_end":19273,"line_start":614,"line_end":614,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19278,"byte_end":19281,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19286,"byte_end":19299,"line_start":616,"line_end":616,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19304,"byte_end":19307,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19312,"byte_end":19387,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19392,"byte_end":19435,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19440,"byte_end":19449,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20390,"byte_end":20405,"line_start":646,"line_end":646,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"pub fn query_row_named<T, F>(&Self, &str, &[(&str, &dyn ToSql)], F)\n-> Result<T> where F: FnOnce(&Row) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19724,"byte_end":19797,"line_start":631,"line_end":631,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19802,"byte_end":19838,"line_start":632,"line_end":632,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19843,"byte_end":19846,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19851,"byte_end":19924,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19929,"byte_end":19941,"line_start":635,"line_end":635,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19946,"byte_end":19949,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":19954,"byte_end":20027,"line_start":637,"line_end":637,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20032,"byte_end":20104,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20109,"byte_end":20147,"line_start":639,"line_end":639,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20152,"byte_end":20155,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20160,"byte_end":20173,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20178,"byte_end":20181,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20186,"byte_end":20261,"line_start":643,"line_end":643,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20266,"byte_end":20309,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"deprecated = \"You can use `query_row` with named params now.\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20314,"byte_end":20378,"line_start":645,"line_end":645,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21505,"byte_end":21523,"line_start":679,"line_end":679,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"pub fn query_row_and_then<T, E, P, F>(&Self, &str, P, F) -> Result<T, E> where\nP: Params, F: FnOnce(&Row) -> Result<T, E>, E: convert::From<Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20588,"byte_end":20658,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/ single row, and execute a mapping via `f` on that returned row with","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20663,"byte_end":20734,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ the possibility of failure. The `Result` type of `f` must implement","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20739,"byte_end":20810,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/ `std::convert::From<Error>`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20815,"byte_end":20847,"line_start":656,"line_end":656,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20852,"byte_end":20855,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20860,"byte_end":20874,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20879,"byte_end":20882,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20887,"byte_end":20905,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result, Connection};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20910,"byte_end":20951,"line_start":661,"line_end":661,"column_start":5,"column_end":46}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":20956,"byte_end":21018,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/     conn.query_row_and_then(","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21023,"byte_end":21055,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21060,"byte_end":21124,"line_start":664,"line_end":664,"column_start":5,"column_end":69}},{"value":"/         [],","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21129,"byte_end":21144,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/         |row| row.get(0),","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21149,"byte_end":21178,"line_start":666,"line_end":666,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21183,"byte_end":21192,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21197,"byte_end":21202,"line_start":668,"line_end":668,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21207,"byte_end":21214,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21219,"byte_end":21222,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21227,"byte_end":21300,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21305,"byte_end":21317,"line_start":672,"line_end":672,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21322,"byte_end":21325,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21330,"byte_end":21343,"line_start":674,"line_end":674,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21348,"byte_end":21351,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21356,"byte_end":21431,"line_start":676,"line_end":676,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21436,"byte_end":21479,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21484,"byte_end":21493,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22496,"byte_end":22503,"line_start":711,"line_end":711,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"pub fn prepare(&Self, &str) -> Result<Statement>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21891,"byte_end":21933,"line_start":692,"line_end":692,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21938,"byte_end":21941,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21946,"byte_end":21960,"line_start":694,"line_end":694,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21965,"byte_end":21968,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21973,"byte_end":21991,"line_start":696,"line_end":696,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":21996,"byte_end":22037,"line_start":697,"line_end":697,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22042,"byte_end":22101,"line_start":698,"line_end":698,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22106,"byte_end":22183,"line_start":699,"line_end":699,"column_start":5,"column_end":82}},{"value":"/     stmt.execute([\"Joe Smith\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22188,"byte_end":22225,"line_start":700,"line_end":700,"column_start":5,"column_end":42}},{"value":"/     stmt.execute([\"Bob Jones\"])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22230,"byte_end":22267,"line_start":701,"line_end":701,"column_start":5,"column_end":42}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22272,"byte_end":22286,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22291,"byte_end":22296,"line_start":703,"line_end":703,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22301,"byte_end":22308,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22313,"byte_end":22316,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22321,"byte_end":22334,"line_start":706,"line_end":706,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22339,"byte_end":22342,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22347,"byte_end":22422,"line_start":708,"line_end":708,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22427,"byte_end":22470,"line_start":709,"line_end":709,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22475,"byte_end":22484,"line_start":710,"line_end":710,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22991,"byte_end":22996,"line_start":725,"line_end":725,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"pub fn close(Self) -> Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[{"value":"/ Close the SQLite connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22608,"byte_end":22640,"line_start":715,"line_end":715,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22645,"byte_end":22648,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This is functionally equivalent to the `Drop` implementation for","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22653,"byte_end":22721,"line_start":717,"line_end":717,"column_start":5,"column_end":73}},{"value":"/ `Connection` except that on failure, it returns an error and the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22726,"byte_end":22794,"line_start":718,"line_end":718,"column_start":5,"column_end":73}},{"value":"/ connection itself (presumably so closing can be attempted again).","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22799,"byte_end":22868,"line_start":719,"line_end":719,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22873,"byte_end":22876,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22881,"byte_end":22894,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22899,"byte_end":22902,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22907,"byte_end":22965,"line_start":723,"line_end":723,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":22970,"byte_end":22979,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28618,"byte_end":28624,"line_start":867,"line_end":867,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"pub unsafe fn handle(&Self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[{"value":"/ Get access to the underlying SQLite database connection handle.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28067,"byte_end":28134,"line_start":853,"line_end":853,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28139,"byte_end":28142,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28147,"byte_end":28160,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28165,"byte_end":28168,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ You should not need to use this function. If you do need to, please","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28173,"byte_end":28244,"line_start":857,"line_end":857,"column_start":5,"column_end":76}},{"value":"/ [open an issue on the rusqlite repository](https://github.com/rusqlite/rusqlite/issues) and describe","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28249,"byte_end":28353,"line_start":858,"line_end":858,"column_start":5,"column_end":109}},{"value":"/ your use case.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28358,"byte_end":28376,"line_start":859,"line_end":859,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28381,"byte_end":28384,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28389,"byte_end":28401,"line_start":861,"line_end":861,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28406,"byte_end":28409,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it gives you raw access","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28414,"byte_end":28473,"line_start":863,"line_end":863,"column_start":5,"column_end":64}},{"value":"/ to the SQLite connection, and what you do with it could impact the","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28478,"byte_end":28548,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ safety of this `Connection`.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28553,"byte_end":28585,"line_start":865,"line_end":865,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28590,"byte_end":28599,"line_start":866,"line_end":866,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29026,"byte_end":29037,"line_start":880,"line_end":880,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Connection>::from_handle","value":"pub unsafe fn from_handle(*mut ffi::sqlite3) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Connection` from a raw handle.","sig":null,"attributes":[{"value":"/ Create a `Connection` from a raw handle.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28696,"byte_end":28740,"line_start":871,"line_end":871,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28745,"byte_end":28748,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ The underlying SQLite database connection handle will not be closed when","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28753,"byte_end":28829,"line_start":873,"line_end":873,"column_start":5,"column_end":81}},{"value":"/ the returned connection is dropped/closed.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28834,"byte_end":28880,"line_start":874,"line_end":874,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28885,"byte_end":28888,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28893,"byte_end":28905,"line_start":876,"line_end":876,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28910,"byte_end":28913,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may impact the Connection.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28918,"byte_end":28993,"line_start":878,"line_end":878,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":28998,"byte_end":29007,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29497,"byte_end":29517,"line_start":893,"line_end":893,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"pub fn get_interrupt_handle(&Self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[{"value":"/ Get access to a handle that can be used to interrupt long running","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29365,"byte_end":29434,"line_start":890,"line_end":890,"column_start":5,"column_end":74}},{"value":"/ queries from another thread.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29439,"byte_end":29471,"line_start":891,"line_end":891,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29476,"byte_end":29485,"line_start":892,"line_end":892,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30089,"byte_end":30102,"line_start":913,"line_end":913,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"pub fn is_autocommit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[{"value":"/ Test for auto-commit mode.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":29991,"byte_end":30021,"line_start":910,"line_end":910,"column_start":5,"column_end":35}},{"value":"/ Autocommit mode is on by default.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30026,"byte_end":30063,"line_start":911,"line_end":911,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30068,"byte_end":30077,"line_start":912,"line_end":912,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31353,"byte_end":31358,"line_start":959,"line_end":959,"column_start":12,"column_end":17},"name":"Batch","qualname":"::Batch","value":"Batch {  }","parent":null,"children":[{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626}],"decl_id":null,"docs":" Batch iterator\n ```rust\n use rusqlite::{Batch, Connection, Result};","sig":null,"attributes":[{"value":"/ Batch iterator","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30896,"byte_end":30914,"line_start":941,"line_end":941,"column_start":1,"column_end":19}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30915,"byte_end":30926,"line_start":942,"line_end":942,"column_start":1,"column_end":12}},{"value":"/ use rusqlite::{Batch, Connection, Result};","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30927,"byte_end":30973,"line_start":943,"line_end":943,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30974,"byte_end":30977,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30978,"byte_end":31007,"line_start":945,"line_end":945,"column_start":1,"column_end":30}},{"value":"/     let conn = Connection::open_in_memory()?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31008,"byte_end":31057,"line_start":946,"line_end":946,"column_start":1,"column_end":50}},{"value":"/     let sql = r\"","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31058,"byte_end":31078,"line_start":947,"line_end":947,"column_start":1,"column_end":21}},{"value":"/     CREATE TABLE tbl1 (col);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31079,"byte_end":31111,"line_start":948,"line_end":948,"column_start":1,"column_end":33}},{"value":"/     CREATE TABLE tbl2 (col);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31112,"byte_end":31144,"line_start":949,"line_end":949,"column_start":1,"column_end":33}},{"value":"/     \";","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31145,"byte_end":31155,"line_start":950,"line_end":950,"column_start":1,"column_end":11}},{"value":"/     let mut batch = Batch::new(&conn, sql);","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31156,"byte_end":31203,"line_start":951,"line_end":951,"column_start":1,"column_end":48}},{"value":"/     while let Some(mut stmt) = batch.next()? {","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31204,"byte_end":31254,"line_start":952,"line_end":952,"column_start":1,"column_end":51}},{"value":"/         stmt.execute([])?;","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31255,"byte_end":31285,"line_start":953,"line_end":953,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31286,"byte_end":31295,"line_start":954,"line_end":954,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31296,"byte_end":31310,"line_start":955,"line_end":955,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31311,"byte_end":31316,"line_start":956,"line_end":956,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31317,"byte_end":31324,"line_start":957,"line_end":957,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31513,"byte_end":31516,"line_start":967,"line_end":967,"column_start":12,"column_end":15},"name":"new","qualname":"<Batch>::new","value":"pub fn new(&'conn Connection, &'sql str) -> Batch","parent":null,"children":[],"decl_id":null,"docs":" Constructor\n","sig":null,"attributes":[{"value":"/ Constructor","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31486,"byte_end":31501,"line_start":966,"line_end":966,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31806,"byte_end":31810,"line_start":975,"line_end":975,"column_start":12,"column_end":16},"name":"next","qualname":"<Batch>::next","value":"pub fn next(&mut Self) -> Result<Option<Statement>>","parent":null,"children":[],"decl_id":null,"docs":" Iterates on each batch statements.","sig":null,"attributes":[{"value":"/ Iterates on each batch statements.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31630,"byte_end":31668,"line_start":971,"line_end":971,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31673,"byte_end":31676,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(None)` when batch is completed.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31681,"byte_end":31728,"line_start":973,"line_end":973,"column_start":5,"column_end":52}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31733,"byte_end":31773,"line_start":974,"line_end":974,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32705,"byte_end":32714,"line_start":1006,"line_end":1006,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":2632}],"decl_id":null,"docs":" Flags for opening SQLite database connections.\n See [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":13628823,"byte_end":13628832,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32882,"byte_end":32903,"line_start":1009,"line_end":1009,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened in read-only mode.\n If the database does not already exist, an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2675},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33199,"byte_end":33221,"line_start":1013,"line_end":1013,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened for reading and writing if possible,\n or reading only if the file is write protected by the operating system.\n In either case the database must already exist, otherwise an error is returned.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33334,"byte_end":33352,"line_start":1015,"line_end":1015,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is created if it does not already exist\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2677},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33475,"byte_end":33490,"line_start":1017,"line_end":1017,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The filename can be interpreted as a URI if this flag is set.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33596,"byte_end":33614,"line_start":1019,"line_end":1019,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database will be opened as an in-memory database.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33735,"byte_end":33755,"line_start":1021,"line_end":1021,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The new database connection will use the \"multi-thread\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":33885,"byte_end":33907,"line_start":1023,"line_end":1023,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The new database connection will use the \"serialized\" threading mode.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34012,"byte_end":34036,"line_start":1025,"line_end":1025,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened shared cache enabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34125,"byte_end":34150,"line_start":1027,"line_end":1027,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database is opened shared cache disabled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2683},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34252,"byte_end":34272,"line_start":1029,"line_end":1029,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NOFOLLOW","qualname":"::OpenFlags::SQLITE_OPEN_NOFOLLOW","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" The database filename is not allowed to be a symbolic link.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34337,"byte_end":34358,"line_start":1031,"line_end":1031,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_EXRESCODE","qualname":"::OpenFlags::SQLITE_OPEN_EXRESCODE","value":"Self","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":" Extended result codes.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35635,"byte_end":35663,"line_start":1063,"line_end":1063,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"pub unsafe fn bypass_sqlite_initialization()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[{"value":"/ rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34626,"byte_end":34704,"line_start":1044,"line_end":1044,"column_start":1,"column_end":79}},{"value":"/ later. If you are running against a SQLite older than that, rusqlite","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34705,"byte_end":34777,"line_start":1045,"line_end":1045,"column_start":1,"column_end":73}},{"value":"/ attempts to ensure safety by performing configuration and initialization of","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34778,"byte_end":34857,"line_start":1046,"line_end":1046,"column_start":1,"column_end":80}},{"value":"/ SQLite itself the first time you","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34858,"byte_end":34894,"line_start":1047,"line_end":1047,"column_start":1,"column_end":37}},{"value":"/ attempt to open a connection. By default, rusqlite panics if that","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34895,"byte_end":34964,"line_start":1048,"line_end":1048,"column_start":1,"column_end":70}},{"value":"/ initialization fails, since that could mean SQLite has been initialized in","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34965,"byte_end":35043,"line_start":1049,"line_end":1049,"column_start":1,"column_end":79}},{"value":"/ single-thread mode.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35044,"byte_end":35067,"line_start":1050,"line_end":1050,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35068,"byte_end":35071,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ If you are encountering that panic _and_ can ensure that SQLite has been","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35072,"byte_end":35148,"line_start":1052,"line_end":1052,"column_start":1,"column_end":77}},{"value":"/ initialized in either multi-thread or serialized mode, call this function","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35149,"byte_end":35226,"line_start":1053,"line_end":1053,"column_start":1,"column_end":78}},{"value":"/ prior to attempting to open a connection and rusqlite's initialization","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35227,"byte_end":35301,"line_start":1054,"line_end":1054,"column_start":1,"column_end":75}},{"value":"/ process will by skipped.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35302,"byte_end":35330,"line_start":1055,"line_end":1055,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35331,"byte_end":35334,"line_start":1056,"line_end":1056,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35335,"byte_end":35347,"line_start":1057,"line_end":1057,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35348,"byte_end":35351,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because if you call it and SQLite has actually been","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35352,"byte_end":35431,"line_start":1059,"line_end":1059,"column_start":1,"column_end":80}},{"value":"/ configured to run in single-thread mode,","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35432,"byte_end":35476,"line_start":1060,"line_end":1060,"column_start":1,"column_end":45}},{"value":"/ you may encounter memory errors or data corruption or any number of terrible","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35477,"byte_end":35557,"line_start":1061,"line_end":1061,"column_start":1,"column_end":81}},{"value":"/ things that should not be possible when you're using Rust.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35558,"byte_end":35620,"line_start":1062,"line_end":1062,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35789,"byte_end":35804,"line_start":1068,"line_end":1068,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":1352}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[{"value":"/ Allows interrupting a long-running computation.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35726,"byte_end":35777,"line_start":1067,"line_end":1067,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":36113,"byte_end":36122,"line_start":1078,"line_end":1078,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"pub fn interrupt(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[{"value":"/ Interrupt the query currently executing on another thread. This will","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35962,"byte_end":36034,"line_start":1076,"line_end":1076,"column_start":5,"column_end":77}},{"value":"/ cause that query to fail with a `SQLITE3_INTERRUPT` error.","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":36039,"byte_end":36101,"line_start":1077,"line_end":1077,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72289,"byte_end":72294,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74739,"byte_end":74744,"line_start":180,"line_end":180,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74878,"byte_end":74883,"line_start":187,"line_end":187,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75204,"byte_end":75209,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75928,"byte_end":75933,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":79393,"byte_end":79398,"line_start":291,"line_end":291,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":81932,"byte_end":81942,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84984,"byte_end":84999,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88488,"byte_end":88498,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90620,"byte_end":90634,"line_start":64,"line_end":64,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90967,"byte_end":90982,"line_start":76,"line_end":76,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91156,"byte_end":91171,"line_start":85,"line_end":85,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91309,"byte_end":91324,"line_start":92,"line_end":92,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91534,"byte_end":91549,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91977,"byte_end":91991,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98670,"byte_end":98676,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98988,"byte_end":98997,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":109965,"byte_end":109975,"line_start":66,"line_end":66,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":114894,"byte_end":114909,"line_start":40,"line_end":40,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":114919,"byte_end":114934,"line_start":42,"line_end":42,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":123758,"byte_end":123773,"line_start":313,"line_end":313,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":140008,"byte_end":140022,"line_start":342,"line_end":342,"column_start":20,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":140097,"byte_end":140111,"line_start":349,"line_end":349,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":140517,"byte_end":140520,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144353,"byte_end":144356,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144449,"byte_end":144459,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":154559,"byte_end":154571,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":160257,"byte_end":160269,"line_start":229,"line_end":229,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":160782,"byte_end":160786,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163214,"byte_end":163218,"line_start":89,"line_end":89,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163631,"byte_end":163635,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163959,"byte_end":163962,"line_start":122,"line_end":122,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164560,"byte_end":164570,"line_start":148,"line_end":148,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":165141,"byte_end":165152,"line_start":172,"line_end":172,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":166197,"byte_end":166201,"line_start":207,"line_end":207,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167118,"byte_end":167121,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171689,"byte_end":171692,"line_start":357,"line_end":357,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177926,"byte_end":177935,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":850},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":206311,"byte_end":206320,"line_start":826,"line_end":826,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":206734,"byte_end":206743,"line_start":841,"line_end":841,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":206859,"byte_end":206868,"line_start":849,"line_end":849,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229352,"byte_end":229363,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233730,"byte_end":233741,"line_start":232,"line_end":232,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233897,"byte_end":233908,"line_start":242,"line_end":242,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233992,"byte_end":234001,"line_start":249,"line_end":249,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237457,"byte_end":237466,"line_start":361,"line_end":361,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237622,"byte_end":237631,"line_start":371,"line_end":371,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237715,"byte_end":237725,"line_start":378,"line_end":378,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265838,"byte_end":265850,"line_start":31,"line_end":31,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":266505,"byte_end":266517,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267159,"byte_end":267171,"line_start":71,"line_end":71,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269210,"byte_end":269216,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269374,"byte_end":269377,"line_start":156,"line_end":156,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269540,"byte_end":269542,"line_start":163,"line_end":163,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269707,"byte_end":269710,"line_start":170,"line_end":170,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269864,"byte_end":269867,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":270973,"byte_end":270979,"line_start":215,"line_end":215,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":271222,"byte_end":271227,"line_start":225,"line_end":225,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273847,"byte_end":273858,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275157,"byte_end":275168,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275940,"byte_end":275943,"line_start":104,"line_end":104,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":276091,"byte_end":276094,"line_start":111,"line_end":111,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":276247,"byte_end":276249,"line_start":118,"line_end":118,"column_start":44,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":276404,"byte_end":276407,"line_start":125,"line_end":125,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":278380,"byte_end":278386,"line_start":206,"line_end":206,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":278652,"byte_end":278655,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":279083,"byte_end":279088,"line_start":241,"line_end":241,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":279225,"byte_end":279231,"line_start":248,"line_end":248,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284808,"byte_end":284813,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284911,"byte_end":284916,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":285028,"byte_end":285033,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286046,"byte_end":286051,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286153,"byte_end":286158,"line_start":88,"line_end":88,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286264,"byte_end":286269,"line_start":95,"line_end":95,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286371,"byte_end":286376,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286482,"byte_end":286487,"line_start":109,"line_end":109,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286599,"byte_end":286604,"line_start":116,"line_end":116,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286792,"byte_end":286797,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287793,"byte_end":287801,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288199,"byte_end":288207,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292527,"byte_end":292532,"line_start":159,"line_end":159,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293036,"byte_end":293044,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293178,"byte_end":293186,"line_start":182,"line_end":182,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293311,"byte_end":293319,"line_start":189,"line_end":189,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293726,"byte_end":293734,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252884,"byte_end":252888,"line_start":127,"line_end":127,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\param_cache.rs","byte_start":297270,"byte_end":297285,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":299254,"byte_end":299266,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":301499,"byte_end":301511,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":301616,"byte_end":301628,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":301807,"byte_end":301819,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":302107,"byte_end":302119,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":302267,"byte_end":302279,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6718,"byte_end":6724,"line_start":233,"line_end":233,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9869,"byte_end":9879,"line_start":340,"line_end":340,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9898,"byte_end":9908,"line_start":342,"line_end":342,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10011,"byte_end":10021,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30713,"byte_end":30723,"line_start":933,"line_end":933,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31461,"byte_end":31466,"line_start":965,"line_end":965,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32352,"byte_end":32357,"line_start":994,"line_end":994,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34400,"byte_end":34409,"line_start":1035,"line_end":1035,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35875,"byte_end":35890,"line_start":1072,"line_end":1072,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35915,"byte_end":35930,"line_start":1073,"line_end":1073,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35940,"byte_end":35955,"line_start":1075,"line_end":1075,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":2833,"byte_end":2839,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":3553,"byte_end":3558,"line_start":127,"line_end":127,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":964}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":72289,"byte_end":72294,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":2670}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74739,"byte_end":74744,"line_start":180,"line_end":180,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":74878,"byte_end":74883,"line_start":187,"line_end":187,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75204,"byte_end":75209,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":75928,"byte_end":75933,"line_start":216,"line_end":216,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1358},"to":{"krate":2,"index":9567}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\error.rs","byte_start":79393,"byte_end":79398,"line_start":291,"line_end":291,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":81932,"byte_end":81942,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\busy.rs","byte_start":84984,"byte_end":84999,"line_start":78,"line_end":78,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":88488,"byte_end":88498,"line_start":10,"line_end":10,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90620,"byte_end":90634,"line_start":64,"line_end":64,"column_start":22,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":3019}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":90967,"byte_end":90982,"line_start":76,"line_end":76,"column_start":23,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":3234}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91156,"byte_end":91171,"line_start":85,"line_end":85,"column_start":26,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":3247}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91309,"byte_end":91324,"line_start":92,"line_end":92,"column_start":15,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91534,"byte_end":91549,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\cache.rs","byte_start":91977,"byte_end":91991,"line_start":119,"line_end":119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98670,"byte_end":98676,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\column.rs","byte_start":98988,"byte_end":98997,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\config.rs","byte_start":109965,"byte_end":109975,"line_start":66,"line_end":66,"column_start":6,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":114894,"byte_end":114909,"line_start":40,"line_end":40,"column_start":22,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":3019}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":114919,"byte_end":114934,"line_start":42,"line_end":42,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\inner_connection.rs","byte_start":123758,"byte_end":123773,"line_start":313,"line_end":313,"column_start":15,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":133486,"byte_end":133492,"line_start":157,"line_end":157,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":471},"to":{"krate":0,"index":475}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":140008,"byte_end":140022,"line_start":342,"line_end":342,"column_start":20,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":471}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\params.rs","byte_start":140097,"byte_end":140111,"line_start":349,"line_end":349,"column_start":20,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":475}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":140517,"byte_end":140520,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144353,"byte_end":144356,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":529},"to":{"krate":2,"index":3234}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\pragma.rs","byte_start":144449,"byte_end":144459,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":154559,"byte_end":154571,"line_start":31,"line_end":31,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\raw_statement.rs","byte_start":160257,"byte_end":160269,"line_start":229,"line_end":229,"column_start":15,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2085},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":160782,"byte_end":160786,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163214,"byte_end":163218,"line_start":89,"line_end":89,"column_start":13,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163631,"byte_end":163635,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":163959,"byte_end":163962,"line_start":122,"line_end":122,"column_start":33,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":670},"to":{"krate":21,"index":59}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":164560,"byte_end":164570,"line_start":148,"line_end":148,"column_start":25,"column_end":35},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":7829}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":165141,"byte_end":165152,"line_start":172,"line_end":172,"column_start":28,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":7829}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":166197,"byte_end":166201,"line_start":207,"line_end":207,"column_start":43,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":645},"to":{"krate":22,"index":10}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":167118,"byte_end":167121,"line_start":247,"line_end":247,"column_start":13,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":171689,"byte_end":171692,"line_start":357,"line_end":357,"column_start":41,"column_end":44},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":710},"to":{"krate":2,"index":2916}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\row.rs","byte_start":172152,"byte_end":172158,"line_start":374,"line_end":374,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":734},"to":{"krate":0,"index":737}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":177926,"byte_end":177935,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":206311,"byte_end":206320,"line_start":826,"line_end":826,"column_start":21,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":823},"to":{"krate":2,"index":9560}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":206734,"byte_end":206743,"line_start":841,"line_end":841,"column_start":15,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":823},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\statement.rs","byte_start":206859,"byte_end":206868,"line_start":849,"line_end":849,"column_start":6,"column_end":15},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":229352,"byte_end":229363,"line_start":98,"line_end":98,"column_start":6,"column_end":17},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233730,"byte_end":233741,"line_start":232,"line_end":232,"column_start":16,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2363},"to":{"krate":2,"index":3234}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233897,"byte_end":233908,"line_start":242,"line_end":242,"column_start":15,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2363},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":233992,"byte_end":234001,"line_start":249,"line_end":249,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237457,"byte_end":237466,"line_start":361,"line_end":361,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":3234}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237622,"byte_end":237631,"line_start":371,"line_end":371,"column_start":15,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":905},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\transaction.rs","byte_start":237715,"byte_end":237725,"line_start":378,"line_end":378,"column_start":6,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":265838,"byte_end":265850,"line_start":31,"line_end":31,"column_start":20,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2370},"to":{"krate":2,"index":2670}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":266505,"byte_end":266517,"line_start":51,"line_end":51,"column_start":23,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2370},"to":{"krate":2,"index":9567}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267159,"byte_end":267171,"line_start":71,"line_end":71,"column_start":16,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2370},"to":{"krate":1,"index":2338}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":267557,"byte_end":267562,"line_start":85,"line_end":85,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269210,"byte_end":269216,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269374,"byte_end":269377,"line_start":156,"line_end":156,"column_start":18,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269540,"byte_end":269542,"line_start":163,"line_end":163,"column_start":27,"column_end":29},"kind":{"Impl":{"id":59}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269707,"byte_end":269710,"line_start":170,"line_end":170,"column_start":29,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":269864,"byte_end":269867,"line_start":177,"line_end":177,"column_start":18,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":270973,"byte_end":270979,"line_start":215,"line_end":215,"column_start":30,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":2,"index":45089},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\from_sql.rs","byte_start":271222,"byte_end":271227,"line_start":225,"line_end":225,"column_start":18,"column_end":23},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2489},"to":{"krate":0,"index":1016}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":273847,"byte_end":273858,"line_start":33,"line_end":33,"column_start":37,"column_end":48},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2411},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275157,"byte_end":275168,"line_start":82,"line_end":82,"column_start":16,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2411},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":275940,"byte_end":275943,"line_start":104,"line_end":104,"column_start":45,"column_end":48},"kind":{"Impl":{"id":66}},"from":{"krate":5,"index":672},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":276091,"byte_end":276094,"line_start":111,"line_end":111,"column_start":35,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":276247,"byte_end":276249,"line_start":118,"line_end":118,"column_start":44,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":4665},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":276404,"byte_end":276407,"line_start":125,"line_end":125,"column_start":46,"column_end":49},"kind":{"Impl":{"id":69}},"from":{"krate":5,"index":5984},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":278380,"byte_end":278386,"line_start":206,"line_end":206,"column_start":16,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":5,"index":7617},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":278652,"byte_end":278655,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":5,"index":7080},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":279083,"byte_end":279088,"line_start":241,"line_end":241,"column_start":16,"column_end":21},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2489},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\to_sql.rs","byte_start":279225,"byte_end":279231,"line_start":248,"line_end":248,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":2,"index":45089},"to":{"krate":0,"index":1079}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284808,"byte_end":284813,"line_start":22,"line_end":22,"column_start":21,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":284911,"byte_end":284916,"line_start":29,"line_end":29,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":285028,"byte_end":285033,"line_start":36,"line_end":36,"column_start":22,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286046,"byte_end":286051,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286153,"byte_end":286158,"line_start":88,"line_end":88,"column_start":20,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286264,"byte_end":286269,"line_start":95,"line_end":95,"column_start":20,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286371,"byte_end":286376,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286482,"byte_end":286487,"line_start":109,"line_end":109,"column_start":24,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286599,"byte_end":286604,"line_start":116,"line_end":116,"column_start":29,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value.rs","byte_start":286792,"byte_end":286797,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":287793,"byte_end":287801,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":288199,"byte_end":288207,"line_start":37,"line_end":37,"column_start":10,"column_end":18},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":292527,"byte_end":292532,"line_start":159,"line_end":159,"column_start":29,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2489},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293036,"byte_end":293044,"line_start":175,"line_end":175,"column_start":28,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293178,"byte_end":293186,"line_start":182,"line_end":182,"column_start":29,"column_end":37},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293311,"byte_end":293319,"line_start":189,"line_end":189,"column_start":30,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\value_ref.rs","byte_start":293726,"byte_end":293734,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2524},"to":{"krate":2,"index":2925}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\types\\mod.rs","byte_start":252884,"byte_end":252888,"line_start":127,"line_end":127,"column_start":23,"column_end":27},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2559},"to":{"krate":2,"index":9567}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\param_cache.rs","byte_start":297270,"byte_end":297285,"line_start":11,"line_end":11,"column_start":6,"column_end":21},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":299254,"byte_end":299266,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":301499,"byte_end":301511,"line_start":88,"line_end":88,"column_start":18,"column_end":30},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2997}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":301616,"byte_end":301628,"line_start":95,"line_end":95,"column_start":26,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":9560}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":301807,"byte_end":301819,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":3234}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":302107,"byte_end":302119,"line_start":117,"line_end":117,"column_start":25,"column_end":37},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2670}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\util\\small_cstr.rs","byte_start":302267,"byte_end":302279,"line_start":124,"line_end":124,"column_start":35,"column_end":47},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2586},"to":{"krate":2,"index":2618}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":6718,"byte_end":6724,"line_start":233,"line_end":233,"column_start":34,"column_end":40},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1270},"to":{"krate":0,"index":1273}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9869,"byte_end":9879,"line_start":340,"line_end":340,"column_start":22,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":3019}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":9898,"byte_end":9908,"line_start":342,"line_end":342,"column_start":15,"column_end":25},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":3258}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":10011,"byte_end":10021,"line_start":349,"line_end":349,"column_start":6,"column_end":16},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":30713,"byte_end":30723,"line_start":933,"line_end":933,"column_start":21,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1287},"to":{"krate":2,"index":9560}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":31461,"byte_end":31466,"line_start":965,"line_end":965,"column_start":19,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":32352,"byte_end":32357,"line_start":994,"line_end":994,"column_start":26,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2621},"to":{"krate":2,"index":7829}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":34400,"byte_end":34409,"line_start":1035,"line_end":1035,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":2997}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35875,"byte_end":35890,"line_start":1072,"line_end":1072,"column_start":22,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":3019}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35915,"byte_end":35930,"line_start":1073,"line_end":1073,"column_start":22,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":3031}},{"span":{"file_name":"C:\\Users\\Jay\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rusqlite-0.27.0\\src\\lib.rs","byte_start":35940,"byte_end":35955,"line_start":1075,"line_end":1075,"column_start":6,"column_end":21},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}}]}